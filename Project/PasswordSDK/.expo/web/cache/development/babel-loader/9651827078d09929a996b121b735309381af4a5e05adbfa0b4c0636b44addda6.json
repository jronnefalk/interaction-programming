{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password1 = _useState2[0],\n    setPassword1 = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password2 = _useState4[0],\n    setPassword2 = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password3 = _useState6[0],\n    setPassword3 = _useState6[1];\n  var customColors = [\"#FFC0CB\", \"#FFA07A\", \"#FFD700\", \"#32CD32\", \"#0000FF\", \"#800080\"];\n  var basicStrengthAlgorithm = function basicStrengthAlgorithm(password) {\n    return password.length;\n  };\n  var advancedStrengthAlgorithm = function advancedStrengthAlgorithm(password) {\n    var strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n  var customStrengthWords = [{\n    word: \"Too Simple\",\n    strength: 0\n  }, {\n    word: \"Better\",\n    strength: 3\n  }, {\n    word: \"Good\",\n    strength: 5\n  }, {\n    word: \"Strong\",\n    strength: 7\n  }, {\n    word: \"Very Strong\",\n    strength: 9\n  }, {\n    word: \"Extremely Strong\",\n    strength: 10\n  }];\n  return _jsxs(ScrollView, {\n    children: [_jsxs(View, {\n      style: {\n        marginVertical: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          marginBottom: 10\n        },\n        children: \"Basic Strength Calculation\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setPassword1(text);\n        },\n        value: password1,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: {\n          marginBottom: 10\n        }\n      }), _jsx(PasswordStrengthMeter, {\n        password: password1,\n        calculateStrength: basicStrengthAlgorithm\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginVertical: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          marginBottom: 10\n        },\n        children: \"Advanced Strength Calculation\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setPassword2(text);\n        },\n        value: password2,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: {\n          marginBottom: 10\n        }\n      }), _jsx(PasswordStrengthMeter, {\n        password: password2,\n        calculateStrength: advancedStrengthAlgorithm,\n        colorScheme: customColors\n      })]\n    }), _jsxs(View, {\n      style: {\n        marginVertical: 20\n      },\n      children: [_jsx(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18,\n          marginBottom: 10\n        },\n        children: \"Custom Words and Colors Strength Calculation\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(text) {\n          return setPassword3(text);\n        },\n        value: password3,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: {\n          marginBottom: 10\n        }\n      }), _jsx(PasswordStrengthMeter, {\n        password: password3,\n        calculateStrength: advancedStrengthAlgorithm,\n        colorScheme: customColors,\n        strengthWords: customStrengthWords,\n        showFeedbackText: true\n      })]\n    })]\n  });\n};\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","ScrollView","Text","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password1","setPassword1","_useState3","_useState4","password2","setPassword2","_useState5","_useState6","password3","setPassword3","customColors","basicStrengthAlgorithm","password","length","advancedStrengthAlgorithm","strength","test","customStrengthWords","word","children","style","marginVertical","fontWeight","fontSize","marginBottom","onChangeText","text","value","placeholder","secureTextEntry","calculateStrength","colorScheme","strengthWords","showFeedbackText"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, ScrollView, Text } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [password3, setPassword3] = useState(\"\");\n\n  const customColors = [\n    \"#FFC0CB\", // Soft Pink\n    \"#FFA07A\", // Light Orange\n    \"#FFD700\", // Vibrant Yellow\n    \"#32CD32\", // Fresh Green\n    \"#0000FF\", // Deep Blue\n    \"#800080\", // Rich Purple\n  ];\n\n  const basicStrengthAlgorithm = (password) => {\n    return password.length; // Basic example: Length-based strength calculation\n  };\n\n  const advancedStrengthAlgorithm = (password) => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n\n  // Define custom strength words state\n  const customStrengthWords = [\n    { word: \"Too Simple\", strength: 0 },\n    { word: \"Better\", strength: 3 },\n    { word: \"Good\", strength: 5 },\n    { word: \"Strong\", strength: 7 },\n    { word: \"Very Strong\", strength: 9 },\n    { word: \"Extremely Strong\", strength: 10 },\n  ];\n\n  return (\n    <ScrollView>\n      <View style={{ marginVertical: 20 }}>\n        <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}>\n          Basic Strength Calculation\n        </Text>\n        <TextInput\n          onChangeText={(text) => setPassword1(text)}\n          value={password1}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={{ marginBottom: 10 }}\n        />\n        <PasswordStrengthMeter\n          password={password1}\n          calculateStrength={basicStrengthAlgorithm}\n        />\n      </View>\n      <View style={{ marginVertical: 20 }}>\n        <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}>\n          Advanced Strength Calculation\n        </Text>\n        <TextInput\n          onChangeText={(text) => setPassword2(text)}\n          value={password2}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={{ marginBottom: 10 }}\n        />\n        <PasswordStrengthMeter\n          password={password2}\n          calculateStrength={advancedStrengthAlgorithm}\n          colorScheme={customColors}\n        />\n      </View>\n      <View style={{ marginVertical: 20 }}>\n        <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}>\n          Custom Words and Colors Strength Calculation\n        </Text>\n        <TextInput\n          onChangeText={(text) => setPassword3(text)}\n          value={password3}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={{ marginBottom: 10 }}\n        />\n        <PasswordStrengthMeter\n          password={password3}\n          calculateStrength={advancedStrengthAlgorithm}\n          colorScheme={customColors}\n          strengthWords={customStrengthWords}\n          showFeedbackText={true}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}