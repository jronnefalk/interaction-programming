{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PasswordCriteria = function PasswordCriteria(_ref) {\n  var isValid = _ref.isValid,\n    text = _ref.text;\n  return _jsxs(Text, {\n    style: [styles.criteria, isValid ? styles.valid : styles.invalid],\n    children: [isValid ? \"✓\" : \"✗\", \" \", text]\n  });\n};\nvar defaultStrengthAlgorithm = function defaultStrengthAlgorithm(criteria) {\n  var strength = 0;\n  Object.values(criteria).forEach(function (isValid) {\n    if (isValid) strength += 20;\n  });\n  return strength;\n};\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref2) {\n  var _ref2$minLength = _ref2.minLength,\n    minLength = _ref2$minLength === void 0 ? 8 : _ref2$minLength,\n    _ref2$maxLength = _ref2.maxLength,\n    maxLength = _ref2$maxLength === void 0 ? 50 : _ref2$maxLength,\n    _ref2$requireUpperCas = _ref2.requireUpperCase,\n    requireUpperCase = _ref2$requireUpperCas === void 0 ? true : _ref2$requireUpperCas,\n    _ref2$requireLowerCas = _ref2.requireLowerCase,\n    requireLowerCase = _ref2$requireLowerCas === void 0 ? true : _ref2$requireLowerCas,\n    _ref2$requireNumbers = _ref2.requireNumbers,\n    requireNumbers = _ref2$requireNumbers === void 0 ? true : _ref2$requireNumbers,\n    _ref2$requireSpecialC = _ref2.requireSpecialChars,\n    requireSpecialChars = _ref2$requireSpecialC === void 0 ? true : _ref2$requireSpecialC,\n    _ref2$allowedSpecialC = _ref2.allowedSpecialChars,\n    allowedSpecialChars = _ref2$allowedSpecialC === void 0 ? \"!@#$%^&*\" : _ref2$allowedSpecialC,\n    _ref2$customStrengthA = _ref2.customStrengthAlgorithm,\n    customStrengthAlgorithm = _ref2$customStrengthA === void 0 ? null : _ref2$customStrengthA,\n    _ref2$strengthBarColo = _ref2.strengthBarColors,\n    strengthBarColors = _ref2$strengthBarColo === void 0 ? {\n      weak: \"red\",\n      fair: \"orange\",\n      good: \"yellow\",\n      strong: \"lightgreen\",\n      veryStrong: \"green\"\n    } : _ref2$strengthBarColo;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var passwordCriteria = {\n    length: password.length >= minLength && password.length <= maxLength,\n    upper: requireUpperCase && /[A-Z]/.test(password),\n    lower: requireLowerCase && /[a-z]/.test(password),\n    number: requireNumbers && /\\d/.test(password),\n    special: requireSpecialChars && new RegExp(`[${allowedSpecialChars}]`).test(password)\n  };\n  var strength = customStrengthAlgorithm ? customStrengthAlgorithm(password, passwordCriteria) : defaultStrengthAlgorithm(password, passwordCriteria);\n  var getPasswordStrengthBarStyle = function getPasswordStrengthBarStyle() {\n    var barColor = strengthBarColors.weak;\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;else if (strength >= 60) barColor = strengthBarColors.strong;else if (strength >= 40) barColor = strengthBarColors.good;else if (strength >= 20) barColor = strengthBarColors.fair;\n    return {\n      width: `${strength}%`,\n      backgroundColor: barColor,\n      height: 10\n    };\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true,\n      placeholder: \"Enter your password...\"\n    }), _jsx(View, {\n      style: styles.strengthBarContainer,\n      children: _jsx(View, {\n        style: getPasswordStrengthBarStyle()\n      })\n    }), _jsxs(View, {\n      style: styles.criteriaList,\n      children: [_jsx(PasswordCriteria, {\n        isValid: passwordCriteria.length,\n        text: `At least ${minLength} characters`\n      }), requireUpperCase && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.upper,\n        text: \"One uppercase letter\"\n      }), requireLowerCase && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.lower,\n        text: \"One lowercase letter\"\n      }), requireNumbers && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.number,\n        text: \"One number\"\n      }), requireSpecialChars && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.special,\n        text: `One special character (${allowedSpecialChars})`\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\"\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2\n  },\n  valid: {\n    color: \"green\"\n  },\n  invalid: {\n    color: \"red\"\n  },\n  criteriaList: {\n    marginBottom: 10\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Modal","StyleSheet","jsxs","_jsxs","jsx","_jsx","PasswordCriteria","_ref","isValid","text","style","styles","criteria","valid","invalid","children","defaultStrengthAlgorithm","strength","Object","values","forEach","PasswordStrengthMeter","_ref2","_ref2$minLength","minLength","_ref2$maxLength","maxLength","_ref2$requireUpperCas","requireUpperCase","_ref2$requireLowerCas","requireLowerCase","_ref2$requireNumbers","requireNumbers","_ref2$requireSpecialC","requireSpecialChars","_ref2$allowedSpecialC","allowedSpecialChars","_ref2$customStrengthA","customStrengthAlgorithm","_ref2$strengthBarColo","strengthBarColors","weak","fair","good","strong","veryStrong","_useState","_useState2","_slicedToArray","password","setPassword","passwordCriteria","length","upper","test","lower","number","special","RegExp","getPasswordStrengthBarStyle","barColor","width","backgroundColor","height","container","input","onChangeText","value","secureTextEntry","placeholder","strengthBarContainer","criteriaList","create","padding","justifyContent","borderColor","borderWidth","marginBottom","flexDirection","alignItems","marginVertical","color","borderRadius"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Modal,\n  StyleSheet,\n} from \"react-native\";\n\n// Show whether a password criteria has been met\nconst PasswordCriteria = ({ isValid, text }) => (\n  <Text style={[styles.criteria, isValid ? styles.valid : styles.invalid]}>\n    {isValid ? \"✓\" : \"✗\"} {text}\n  </Text>\n);\n\n// Simple algorithm to calculate password strength\nconst defaultStrengthAlgorithm = (criteria) => {\n  // We start with zero strength and increase it by 20 for each criteria met\n  let strength = 0;\n  Object.values(criteria).forEach((isValid) => {\n    if (isValid) strength += 20;\n  });\n  return strength; // The strength is a score out of 100\n};\n\n// Main component for the password strength meter\nconst PasswordStrengthMeter = ({\n  // The default props for our component\n  minLength = 8,\n  maxLength = 50,\n  requireUpperCase = true,\n  requireLowerCase = true,\n  requireNumbers = true,\n  requireSpecialChars = true,\n  allowedSpecialChars = \"!@#$%^&*\",\n  customStrengthAlgorithm = null,\n  strengthBarColors = {\n    weak: \"red\",\n    fair: \"orange\",\n    good: \"yellow\",\n    strong: \"lightgreen\",\n    veryStrong: \"green\",\n  },\n}) => {\n  const [password, setPassword] = useState(\"\"); // This state holds the input from our text field\n\n  // We check the password against our criteria every time it changes\n  const passwordCriteria = {\n    length: password.length >= minLength && password.length <= maxLength,\n    upper: requireUpperCase && /[A-Z]/.test(password),\n    lower: requireLowerCase && /[a-z]/.test(password),\n    number: requireNumbers && /\\d/.test(password),\n    special:\n      requireSpecialChars &&\n      new RegExp(`[${allowedSpecialChars}]`).test(password),\n  };\n\n  // We calculate the strength of the password using either the default algorithm or a custom one\n  const strength = customStrengthAlgorithm\n    ? customStrengthAlgorithm(password, passwordCriteria)\n    : defaultStrengthAlgorithm(password, passwordCriteria);\n\n  // This function determines the color of the strength bar based on the password strength\n  const getPasswordStrengthBarStyle = () => {\n    let barColor = strengthBarColors.weak; // Start with the weakest color\n\n    // Then adjust the color based on how strong the password is\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;\n    else if (strength >= 60) barColor = strengthBarColors.strong;\n    else if (strength >= 40) barColor = strengthBarColors.good;\n    else if (strength >= 20) barColor = strengthBarColors.fair;\n\n    // Return the style for the strength bar\n    return {\n      width: `${strength}%`, // The width of the bar represents the strength\n      backgroundColor: barColor, // The color represents the strength level\n      height: 10,\n    };\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Input field for the password */}\n      <TextInput\n        style={styles.input}\n        onChangeText={setPassword} // Update the password state as the user types\n        value={password} // Display the current password value\n        secureTextEntry // Hide password content\n        placeholder=\"Enter your password...\" // Prompt text for users\n      />\n      {/* Container for the visual strength bar */}\n      <View style={styles.strengthBarContainer}>\n        {/* The colored bar indicating password strength */}\n        <View style={getPasswordStrengthBarStyle()} />\n      </View>\n      {/* List of criteria the password is being checked against */}\n      <View style={styles.criteriaList}>\n        {/* Check for minimum length */}\n        <PasswordCriteria\n          isValid={passwordCriteria.length}\n          text={`At least ${minLength} characters`}\n        />\n        {/* Check for uppercase characters */}\n        {requireUpperCase && (\n          <PasswordCriteria\n            isValid={passwordCriteria.upper}\n            text=\"One uppercase letter\"\n          />\n        )}\n        {/* Check for lowercase characters */}\n        {requireLowerCase && (\n          <PasswordCriteria\n            isValid={passwordCriteria.lower}\n            text=\"One lowercase letter\"\n          />\n        )}\n        {/* Check for numeric characters */}\n        {requireNumbers && (\n          <PasswordCriteria\n            isValid={passwordCriteria.number}\n            text=\"One number\"\n          />\n        )}\n        {/* Check for special characters */}\n        {requireSpecialChars && (\n          <PasswordCriteria\n            isValid={passwordCriteria.special}\n            text={`One special character (${allowedSpecialChars})`}\n          />\n        )}\n      </View>\n    </View>\n  );\n};\n\n// Here we define the styles used in our component\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\",\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10,\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2,\n  },\n  valid: {\n    color: \"green\",\n  },\n  invalid: {\n    color: \"red\",\n  },\n  criteriaList: {\n    marginBottom: 10,\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10,\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}