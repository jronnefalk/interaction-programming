{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password1 = _useState2[0],\n    setPassword1 = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password2 = _useState4[0],\n    setPassword2 = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password3 = _useState6[0],\n    setPassword3 = _useState6[1];\n  var threeLevels = [{\n    label: \"Weak\",\n    threshold: 3,\n    color: \"red\"\n  }, {\n    label: \"Fair\",\n    threshold: 6,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 10,\n    color: \"green\"\n  }];\n  var fiveLevels = [{\n    label: \"That's very weak...\",\n    threshold: 20,\n    color: \"red\"\n  }, {\n    label: \"You can do better!\",\n    threshold: 40,\n    color: \"orange\"\n  }, {\n    label: \"Not bad at all!\",\n    threshold: 60,\n    color: \"yellow\"\n  }, {\n    label: \"Perfect!\",\n    threshold: 80,\n    color: \"lightgreen\"\n  }, {\n    label: \"WOW excellent!!\",\n    threshold: 100,\n    color: \"green\"\n  }];\n  var basicAlgorithm = function basicAlgorithm(password) {\n    var maxLength = 10;\n    var lengthPercentage = password.length / maxLength * 100;\n    return Math.min(Math.floor(lengthPercentage), 100);\n  };\n  return _jsx(ScrollView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        children: \"Three Custom Words with Basic Algorithm\"\n      }), _jsx(TextInput, {\n        onChangeText: setPassword1,\n        value: password1,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: styles.input\n      }), _jsx(PasswordStrengthMeter, {\n        password: password1,\n        score: basicAlgorithm(password1),\n        customStrengthLevels: threeLevels\n      }), _jsx(Text, {\n        children: \"Five Custom Words with Basic Algorithm\"\n      }), _jsx(TextInput, {\n        onChangeText: setPassword2,\n        value: password2,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: styles.input\n      }), _jsx(PasswordStrengthMeter, {\n        password: password2,\n        score: basicAlgorithm(password2),\n        customStrengthLevels: fiveLevels\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  input: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  }\n});\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","ScrollView","Text","StyleSheet","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password1","setPassword1","_useState3","_useState4","password2","setPassword2","_useState5","_useState6","password3","setPassword3","threeLevels","label","threshold","color","fiveLevels","basicAlgorithm","password","maxLength","lengthPercentage","length","Math","min","floor","style","styles","container","children","inputContainer","onChangeText","value","placeholder","secureTextEntry","input","score","customStrengthLevels","create","flex","padding","marginBottom","borderColor","borderWidth"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["// PasswordStrengthMeterTest.js\nimport React, { useState } from \"react\";\nimport { View, TextInput, ScrollView, Text, StyleSheet } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [password3, setPassword3] = useState(\"\");\n\n  // Three custom words and thresholds\n  const threeLevels = [\n    { label: \"Weak\", threshold: 3, color: \"red\" },\n    { label: \"Fair\", threshold: 6, color: \"yellow\" },\n    { label: \"Strong\", threshold: 10, color: \"green\" },\n  ];\n\n  // Five custom words and thresholds\n  const fiveLevels = [\n    { label: \"That's very weak...\", threshold: 20, color: \"red\" },\n    { label: \"You can do better!\", threshold: 40, color: \"orange\" },\n    { label: \"Not bad at all!\", threshold: 60, color: \"yellow\" },\n    { label: \"Perfect!\", threshold: 80, color: \"lightgreen\" },\n    { label: \"WOW excellent!!\", threshold: 100, color: \"green\" },\n  ];\n\n  // Basic strength algorithm with a roof\n  const basicAlgorithm = (password) => {\n    const maxLength = 10; // Maximum password length for 100% strength\n    const lengthPercentage = (password.length / maxLength) * 100;\n    return Math.min(Math.floor(lengthPercentage), 100);\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.inputContainer}>\n        <Text>Three Custom Words with Basic Algorithm</Text>\n        <TextInput\n          onChangeText={setPassword1}\n          value={password1}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={styles.input}\n        />\n        <PasswordStrengthMeter\n          password={password1}\n          score={basicAlgorithm(password1)}\n          customStrengthLevels={threeLevels} // Use custom strength levels\n        />\n\n        <Text>Five Custom Words with Basic Algorithm</Text>\n        <TextInput\n          onChangeText={setPassword2}\n          value={password2}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={styles.input}\n        />\n        <PasswordStrengthMeter\n          password={password2}\n          score={basicAlgorithm(password2)}\n          customStrengthLevels={fiveLevels} // Use custom strength levels\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  input: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10,\n  },\n});\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}