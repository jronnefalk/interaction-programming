{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var minLength = 6;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      children: [_jsx(Text, {\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setPassword,\n        value: password,\n        secureTextEntry: true\n      }), minLength !== 0 && _jsxs(Text, {\n        children: [\"Minimum of \", minLength, \" characters in length.\"]\n      })]\n    }), _jsx(PasswordStrengthMeter, {\n      password: password,\n      minLength: minLength,\n      algorithm: customizePasswordStrengthAlgorithm\n    })]\n  });\n}\nfunction customizePasswordStrengthAlgorithm(password, minLength) {\n  if (password.length < minLength) return 0;\n  var strengthPoints = 0;\n  if (password.length > 8) strengthPoints += 5;\n  return strengthPoints;\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    gap: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    padding: 10,\n    marginTop: 5,\n    marginBottom: 5\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password","setPassword","minLength","style","styles","container","children","flexDirection","input","onChangeText","value","secureTextEntry","algorithm","customizePasswordStrengthAlgorithm","length","strengthPoints","create","gap","borderWidth","borderColor","padding","marginTop","marginBottom"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, TextInput } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nexport default function PasswordStrengthMeterTest() {\n  const [password, setPassword] = useState(\"\");\n  const minLength = 6;\n\n  return (\n    <View style={styles.container}>\n      <View style={{ flexDirection: \"column\" }}>\n        <Text>Password</Text>\n        <TextInput\n          style={styles.input}\n          onChangeText={setPassword}\n          value={password}\n          secureTextEntry={true}\n        />\n        {minLength !== 0 && (\n          <Text>Minimum of {minLength} characters in length.</Text>\n        )}\n      </View>\n\n      <PasswordStrengthMeter\n        password={password}\n        minLength={minLength}\n        algorithm={customizePasswordStrengthAlgorithm}\n      />\n    </View>\n  );\n}\n\n/*\nA testing function for passing in a customized strength algorithm to PasswordStrengthMeter.\n\nShould return a number 0-5.\n*/\nfunction customizePasswordStrengthAlgorithm(password, minLength) {\n  if (password.length < minLength) return 0;\n\n  let strengthPoints = 0;\n\n  if (password.length > 8) strengthPoints += 5;\n\n  return strengthPoints;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    gap: 10,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"gray\",\n    padding: 10,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAExC,OAAOC,qBAAqB;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,eAAe,SAASC,yBAAyBA,CAAA,EAAG;EAClD,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAMI,SAAS,GAAG,CAAC;EAEnB,OACEP,KAAA,CAACN,IAAI;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BX,KAAA,CAACN,IAAI;MAACc,KAAK,EAAE;QAAEI,aAAa,EAAE;MAAS,CAAE;MAAAD,QAAA,GACvCb,IAAA,CAACL,IAAI;QAAAkB,QAAA,EAAC;MAAQ,CAAM,CAAC,EACrBb,IAAA,CAACH,SAAS;QACRa,KAAK,EAAEC,MAAM,CAACI,KAAM;QACpBC,YAAY,EAAER,WAAY;QAC1BS,KAAK,EAAEV,QAAS;QAChBW,eAAe,EAAE;MAAK,CACvB,CAAC,EACDT,SAAS,KAAK,CAAC,IACdP,KAAA,CAACP,IAAI;QAAAkB,QAAA,GAAC,aAAW,EAACJ,SAAS,EAAC,wBAAsB;MAAA,CAAM,CACzD;IAAA,CACG,CAAC,EAEPT,IAAA,CAACF,qBAAqB;MACpBS,QAAQ,EAAEA,QAAS;MACnBE,SAAS,EAAEA,SAAU;MACrBU,SAAS,EAAEC;IAAmC,CAC/C,CAAC;EAAA,CACE,CAAC;AAEX;AAOA,SAASA,kCAAkCA,CAACb,QAAQ,EAAEE,SAAS,EAAE;EAC/D,IAAIF,QAAQ,CAACc,MAAM,GAAGZ,SAAS,EAAE,OAAO,CAAC;EAEzC,IAAIa,cAAc,GAAG,CAAC;EAEtB,IAAIf,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAEC,cAAc,IAAI,CAAC;EAE5C,OAAOA,cAAc;AACvB;AAEA,IAAMX,MAAM,GAAGjB,UAAU,CAAC6B,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTE,aAAa,EAAE,KAAK;IACpBU,GAAG,EAAE;EACP,CAAC;EACDT,KAAK,EAAE;IACLU,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,CAAC;IACZC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}