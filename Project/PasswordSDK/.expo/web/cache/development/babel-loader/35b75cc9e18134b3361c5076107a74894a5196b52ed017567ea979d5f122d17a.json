{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password1 = _useState2[0],\n    setPassword1 = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password2 = _useState4[0],\n    setPassword2 = _useState4[1];\n  var threeLevels = [{\n    label: \"Weak\",\n    threshold: 30,\n    color: \"red\"\n  }, {\n    label: \"Fair\",\n    threshold: 60,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 100,\n    color: \"green\"\n  }];\n  var fiveLevels = [{\n    label: \"That's very weak...\",\n    threshold: 20,\n    color: \"red\"\n  }, {\n    label: \"You can do better!\",\n    threshold: 40,\n    color: \"orange\"\n  }, {\n    label: \"Not bad at all!\",\n    threshold: 60,\n    color: \"yellow\"\n  }, {\n    label: \"Perfect!\",\n    threshold: 80,\n    color: \"lightgreen\"\n  }, {\n    label: \"WOW excellent!!\",\n    threshold: 100,\n    color: \"green\"\n  }];\n  var basicAlgorithm = function basicAlgorithm(password) {\n    var maxLength = 10;\n    var lengthPercentage = password.length / maxLength * 100;\n    var score = Math.min(Math.floor(lengthPercentage), 100);\n    return score;\n  };\n  var advancedAlgorithm = function advancedAlgorithm(password) {\n    var factors = {\n      length: password.length >= 8,\n      uppercase: /[A-Z]/.test(password),\n      lowercase: /[a-z]/.test(password),\n      digits: /\\d/.test(password),\n      specialChars: /[!@#$%^&*]/.test(password)\n    };\n    var score = 0;\n    if (factors.length) score += 20;\n    if (factors.uppercase) score += 20;\n    if (factors.lowercase) score += 20;\n    if (factors.digits) score += 15;\n    if (factors.specialChars) score += 25;\n    return score;\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Three custom words with basic and advanced algorithm\"\n      }), _jsx(TextInput, {\n        onChangeText: setPassword1,\n        value: password1,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: [styles.input, styles.roundedInput]\n      }), _jsx(PasswordStrengthMeter, {\n        password: password1,\n        score: basicAlgorithm(password1),\n        customStrengthLevels: threeLevels\n      }), _jsx(PasswordStrengthMeter, {\n        password: password1,\n        score: advancedAlgorithm(password1),\n        customStrengthLevels: threeLevels\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Five custom words with basic and advanced algorithm\"\n      }), _jsx(TextInput, {\n        onChangeText: setPassword2,\n        value: password2,\n        placeholder: \"Enter your password\",\n        secureTextEntry: true,\n        style: [styles.input, styles.roundedInput]\n      }), _jsx(PasswordStrengthMeter, {\n        password: password2,\n        score: basicAlgorithm(password2),\n        customStrengthLevels: fiveLevels\n      }), _jsx(PasswordStrengthMeter, {\n        password: password2,\n        score: advancedAlgorithm(password2),\n        customStrengthLevels: fiveLevels\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  input: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  },\n  roundedInput: {\n    borderRadius: 10\n  },\n  title: {\n    fontWeight: \"bold\",\n    marginBottom: 10\n  }\n});\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","ScrollView","Text","StyleSheet","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password1","setPassword1","_useState3","_useState4","password2","setPassword2","threeLevels","label","threshold","color","fiveLevels","basicAlgorithm","password","maxLength","lengthPercentage","length","score","Math","min","floor","advancedAlgorithm","factors","uppercase","test","lowercase","digits","specialChars","style","styles","container","children","inputContainer","title","onChangeText","value","placeholder","secureTextEntry","input","roundedInput","customStrengthLevels","create","flex","padding","marginBottom","borderColor","borderWidth","borderRadius","fontWeight"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, ScrollView, Text, StyleSheet } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\"); // Separate state variable for password2\n\n  // Three custom words and thresholds\n  const threeLevels = [\n    { label: \"Weak\", threshold: 30, color: \"red\" },\n    { label: \"Fair\", threshold: 60, color: \"yellow\" },\n    { label: \"Strong\", threshold: 100, color: \"green\" },\n  ];\n\n  // Five custom words and thresholds\n  const fiveLevels = [\n    { label: \"That's very weak...\", threshold: 20, color: \"red\" },\n    { label: \"You can do better!\", threshold: 40, color: \"orange\" },\n    { label: \"Not bad at all!\", threshold: 60, color: \"yellow\" },\n    { label: \"Perfect!\", threshold: 80, color: \"lightgreen\" },\n    { label: \"WOW excellent!!\", threshold: 100, color: \"green\" },\n  ];\n\n  // Basic strength algorithm with a roof\n  const basicAlgorithm = (password) => {\n    const maxLength = 10; // Maximum password length for 100% strength\n    const lengthPercentage = (password.length / maxLength) * 100;\n    const score = Math.min(Math.floor(lengthPercentage), 100);\n    return score;\n  };\n\n  // Advanced strength algorithm\n  const advancedAlgorithm = (password) => {\n    // Define factors to consider\n    const factors = {\n      length: password.length >= 8,\n      uppercase: /[A-Z]/.test(password),\n      lowercase: /[a-z]/.test(password),\n      digits: /\\d/.test(password),\n      specialChars: /[!@#$%^&*]/.test(password),\n    };\n\n    // Calculate score based on factors\n    let score = 0;\n    if (factors.length) score += 20;\n    if (factors.uppercase) score += 20;\n    if (factors.lowercase) score += 20;\n    if (factors.digits) score += 15;\n    if (factors.specialChars) score += 25;\n\n    return score;\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.inputContainer}>\n        <Text style={styles.title}>\n          Three custom words with basic and advanced algorithm\n        </Text>\n        <TextInput\n          onChangeText={setPassword1}\n          value={password1}\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={[styles.input, styles.roundedInput]} // Apply rounded border style\n        />\n        <PasswordStrengthMeter\n          password={password1}\n          score={basicAlgorithm(password1)} // Basic algorithm for three words\n          customStrengthLevels={threeLevels} // Use custom strength levels\n        />\n        <PasswordStrengthMeter\n          password={password1}\n          score={advancedAlgorithm(password1)} // Advanced algorithm for three words\n          customStrengthLevels={threeLevels} // Use custom strength levels\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <Text style={styles.title}>\n          Five custom words with basic and advanced algorithm\n        </Text>\n        <TextInput\n          onChangeText={setPassword2}\n          value={password2} // Use password2 state variable\n          placeholder=\"Enter your password\"\n          secureTextEntry\n          style={[styles.input, styles.roundedInput]} // Apply rounded border style\n        />\n        <PasswordStrengthMeter\n          password={password2} // Use password2 state variable\n          score={basicAlgorithm(password2)} // Basic algorithm for five words\n          customStrengthLevels={fiveLevels} // Use custom strength levels\n        />\n        <PasswordStrengthMeter\n          password={password2} // Use password2 state variable\n          score={advancedAlgorithm(password2)} // Advanced algorithm for five words\n          customStrengthLevels={fiveLevels} // Use custom strength levels\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  input: {\n    borderColor: \"gray\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10,\n  },\n  roundedInput: {\n    borderRadius: 10, // Apply rounded border\n  },\n  title: {\n    fontWeight: \"bold\", // Make the title text bold\n    marginBottom: 10, // Add margin below the titles\n  },\n});\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}