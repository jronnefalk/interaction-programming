{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var scoreAlgorithm = _ref.scoreAlgorithm,\n    customStrengthLevels = _ref.customStrengthLevels,\n    style = _ref.style,\n    onPasswordChange = _ref.onPasswordChange,\n    backgroundColor = _ref.backgroundColor;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    score = _useState4[0],\n    setScore = _useState4[1];\n  var _useState5 = useState(\"0%\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    barWidth = _useState6[0],\n    setBarWidth = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    label = _useState8[0],\n    setLabel = _useState8[1];\n  useEffect(function () {\n    setScore(scoreAlgorithm(password));\n  }, [password, scoreAlgorithm]);\n  useEffect(function () {\n    var levels = customStrengthLevels || defaultStrengthLevels;\n    var _getLevelInfo = getLevelInfo(),\n      label = _getLevelInfo.label;\n    var newBarWidth = `${score / levels[levels.length - 1].threshold * 100}%`;\n    setBarWidth(newBarWidth);\n    setLabel(label);\n    console.log(\"barWidth:\", newBarWidth, \"label:\", label, \"strength:\", score);\n  }, [score, customStrengthLevels]);\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    onPasswordChange && onPasswordChange(text);\n  };\n  var getLevelInfo = function getLevelInfo() {\n    for (var i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n  var levels = customStrengthLevels || defaultStrengthLevels;\n  return _jsxs(View, {\n    style: [styles.container, style, {\n      backgroundColor: backgroundColor\n    }],\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true,\n      onChangeText: handlePasswordChange,\n      value: password\n    }), password.length > 0 && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: [styles.progressBar, {\n          backgroundColor: levels[0].color,\n          width: barWidth\n        }]\n      }), _jsx(Text, {\n        style: styles.label,\n        children: label\n      })]\n    })]\n  });\n};\nvar defaultStrengthLevels = [{\n  label: \"Very Weak\",\n  threshold: 10,\n  color: \"red\"\n}, {\n  label: \"Weak\",\n  threshold: 30,\n  color: \"orange\"\n}, {\n  label: \"Average\",\n  threshold: 50,\n  color: \"yellow\"\n}, {\n  label: \"Strong\",\n  threshold: 70,\n  color: \"lightgreen\"\n}, {\n  label: \"Very Strong\",\n  threshold: 100,\n  color: \"green\"\n}];\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    threshold: PropTypes.number,\n    color: PropTypes.string\n  })),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired,\n  backgroundColor: PropTypes.string\n};\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {}\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 6,\n    borderRadius: 8,\n    width: \"100%\",\n    marginBottom: 30\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    color: \"#000\"\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Text","StyleSheet","PropTypes","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PasswordStrengthMeter","_ref","scoreAlgorithm","customStrengthLevels","style","onPasswordChange","backgroundColor","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","score","setScore","_useState5","_useState6","barWidth","setBarWidth","_useState7","_useState8","label","setLabel","levels","defaultStrengthLevels","_getLevelInfo","getLevelInfo","newBarWidth","length","threshold","console","log","handlePasswordChange","text","i","styles","container","children","input","placeholder","secureTextEntry","onChangeText","value","progressBar","color","width","propTypes","func","isRequired","arrayOf","shape","string","number","object","defaultProps","create","alignItems","padding","borderRadius","marginBottom","height","borderColor","borderWidth","paddingHorizontal","marginTop","fontWeight","alignSelf"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst PasswordStrengthMeter = ({\n  scoreAlgorithm,\n  customStrengthLevels,\n  style,\n  onPasswordChange,\n  backgroundColor,\n}) => {\n  const [password, setPassword] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [barWidth, setBarWidth] = useState(\"0%\");\n  const [label, setLabel] = useState(\"\");\n\n  useEffect(() => {\n    setScore(scoreAlgorithm(password));\n  }, [password, scoreAlgorithm]);\n\n  useEffect(() => {\n    const levels = customStrengthLevels || defaultStrengthLevels;\n    const { label } = getLevelInfo();\n    const newBarWidth = `${\n      (score / levels[levels.length - 1].threshold) * 100\n    }%`;\n\n    // Update the state variables\n    setBarWidth(newBarWidth);\n    setLabel(label);\n\n    console.log(\"barWidth:\", newBarWidth, \"label:\", label, \"strength:\", score);\n  }, [score, customStrengthLevels]);\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n    onPasswordChange && onPasswordChange(text);\n  };\n\n  const getLevelInfo = () => {\n    for (let i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n\n  const levels = customStrengthLevels || defaultStrengthLevels;\n\n  return (\n    <View\n      style={[styles.container, style, { backgroundColor: backgroundColor }]}\n    >\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your password\"\n        secureTextEntry={true}\n        onChangeText={handlePasswordChange}\n        value={password}\n      />\n      {password.length > 0 && (\n        <>\n          <View\n            style={[\n              styles.progressBar,\n              { backgroundColor: levels[0].color, width: barWidth },\n            ]}\n          />\n          <Text style={styles.label}>{label}</Text>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst defaultStrengthLevels = [\n  { label: \"Very Weak\", threshold: 10, color: \"red\" },\n  { label: \"Weak\", threshold: 30, color: \"orange\" },\n  { label: \"Average\", threshold: 50, color: \"yellow\" },\n  { label: \"Strong\", threshold: 70, color: \"lightgreen\" },\n  { label: \"Very Strong\", threshold: 100, color: \"green\" },\n];\n\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      threshold: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired,\n  backgroundColor: PropTypes.string,\n};\n\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 6,\n    borderRadius: 8,\n    width: \"100%\",\n    marginBottom: 30,\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8,\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\",\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}