{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    _ref$colorScheme = _ref.colorScheme,\n    colorScheme = _ref$colorScheme === void 0 ? [\"red\", \"yellow\", \"green\"] : _ref$colorScheme,\n    strengthWords = _ref.strengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? false : _ref$showFeedbackText;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    strengthScore = _useState2[0],\n    setStrengthScore = _useState2[1];\n  useEffect(function () {\n    var strengthPoints = 0;\n    if (password.length >= 8) strengthPoints++;\n    if (password.length >= 12) strengthPoints++;\n    if (/[a-z]/.test(password)) strengthPoints++;\n    if (/[A-Z]/.test(password)) strengthPoints++;\n    if (/\\d/.test(password)) strengthPoints++;\n    if (/[^A-Za-z0-9]/.test(password)) strengthPoints++;\n    var normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n    setStrengthScore(normalizedStrength);\n  }, [password]);\n  var getStrengthLabel = function getStrengthLabel() {\n    if (strengthWords) {\n      var wordObj = strengthWords.find(function (wordObj) {\n        return strengthScore >= wordObj.strength;\n      });\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      var labels = [\"Weak\", \"Better\", \"Strong\"];\n      return labels[strengthScore];\n    }\n  };\n  var barColor = colorScheme[strengthScore];\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${strengthScore / 5 * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", getStrengthLabel()]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","_ref$colorScheme","colorScheme","strengthWords","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","_useState","_useState2","_slicedToArray","strengthScore","setStrengthScore","strengthPoints","length","test","normalizedStrength","Math","min","max","getStrengthLabel","wordObj","find","strength","word","labels","barColor","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","label","fontWeight","feedbackText","color","children","style"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  colorScheme = [\"red\", \"yellow\", \"green\"],\n  strengthWords,\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = false,\n}) => {\n  const [strengthScore, setStrengthScore] = useState(0);\n\n  useEffect(() => {\n    // Calculate the strength score based on the provided criteria\n    let strengthPoints = 0;\n\n    if (password.length >= 8) strengthPoints++;\n    if (password.length >= 12) strengthPoints++;\n    if (/[a-z]/.test(password)) strengthPoints++;\n    if (/[A-Z]/.test(password)) strengthPoints++;\n    if (/\\d/.test(password)) strengthPoints++;\n    if (/[^A-Za-z0-9]/.test(password)) strengthPoints++;\n\n    // Normalize to a scale of 0 to 5\n    const normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n    setStrengthScore(normalizedStrength);\n  }, [password]);\n\n  // Function to get the appropriate label or word based on strength\n  const getStrengthLabel = () => {\n    if (strengthWords) {\n      // Use the custom strengthWords if provided\n      const wordObj = strengthWords.find(\n        (wordObj) => strengthScore >= wordObj.strength\n      );\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      // Use default labels if strengthWords are not provided\n      const labels = [\"Weak\", \"Better\", \"Strong\"]; // Default labels if no strengthWords provided\n      return labels[strengthScore];\n    }\n  };\n\n  const barColor = colorScheme[strengthScore];\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${(strengthScore / 5) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>Strength: {getStrengthLabel()}</Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}