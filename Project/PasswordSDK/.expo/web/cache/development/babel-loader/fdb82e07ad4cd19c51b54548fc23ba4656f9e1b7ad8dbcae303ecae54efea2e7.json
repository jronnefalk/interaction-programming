{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    calculateStrength = _ref.calculateStrength,\n    colorScheme = _ref.colorScheme,\n    labels = _ref.labels,\n    strengthWords = _ref.strengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? false : _ref$showFeedbackText;\n  var strengthScore = calculateStrength ? calculateStrength(password) : defaultStrengthCalculation(password);\n  var normalizedStrength = Math.min(Math.max(strengthScore, 0), labels.length - 1);\n  var barColor = colorScheme[normalizedStrength];\n  var strengthLabel = labels[normalizedStrength];\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${normalizedStrength / (labels.length - 1) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", strengthLabel]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nvar defaultStrengthCalculation = function defaultStrengthCalculation(password) {\n  if (!password) return 0;\n  var strengthPoints = 0;\n  if (password.length >= 8) strengthPoints++;\n  if (password.length >= 12) strengthPoints++;\n  if (/[a-z]/.test(password)) strengthPoints++;\n  if (/[A-Z]/.test(password)) strengthPoints++;\n  if (/\\d/.test(password)) strengthPoints++;\n  if (/[^A-Za-z0-9]/.test(password)) strengthPoints++;\n  return Math.min(strengthPoints, 5);\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","calculateStrength","colorScheme","labels","strengthWords","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","strengthScore","defaultStrengthCalculation","normalizedStrength","Math","min","max","length","barColor","strengthLabel","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","label","fontWeight","feedbackText","color","children","style","strengthPoints","test"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  calculateStrength,\n  colorScheme,\n  labels,\n  strengthWords,\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = false,\n}) => {\n  // If no custom function is provided, use a default one\n  const strengthScore = calculateStrength\n    ? calculateStrength(password)\n    : defaultStrengthCalculation(password);\n  const normalizedStrength = Math.min(\n    Math.max(strengthScore, 0),\n    labels.length - 1\n  );\n  const barColor = colorScheme[normalizedStrength];\n  const strengthLabel = labels[normalizedStrength];\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${(normalizedStrength / (labels.length - 1)) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>Strength: {strengthLabel}</Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\n// Enhanced default algorithm for strength calculation\nconst defaultStrengthCalculation = (password) => {\n  if (!password) return 0;\n  let strengthPoints = 0;\n\n  if (password.length >= 8) strengthPoints++; // Length >= 8\n  if (password.length >= 12) strengthPoints++; // Length >= 12\n  if (/[a-z]/.test(password)) strengthPoints++; // Contains lowercase\n  if (/[A-Z]/.test(password)) strengthPoints++; // Contains uppercase\n  if (/\\d/.test(password)) strengthPoints++; // Contains number\n  if (/[^A-Za-z0-9]/.test(password)) strengthPoints++; // Contains special character\n\n  // Normalize to a scale of 0 to 5\n  return Math.min(strengthPoints, 5);\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}