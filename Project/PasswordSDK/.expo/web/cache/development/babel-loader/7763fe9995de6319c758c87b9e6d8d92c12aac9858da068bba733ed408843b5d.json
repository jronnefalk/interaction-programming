{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar customStrengthAlgorithm = function customStrengthAlgorithm(password) {\n  return password.length * 10;\n};\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.testLabel,\n      children: \"Default Configuration\"\n    }), _jsx(View, {\n      style: styles.testCase,\n      children: _jsx(PasswordStrengthMeter, {})\n    }), _jsx(Text, {\n      style: styles.testLabel,\n      children: \"Minimum Length 12\"\n    }), _jsx(View, {\n      style: styles.testCase,\n      children: _jsx(PasswordStrengthMeter, {\n        minLength: 12\n      })\n    }), _jsx(Text, {\n      style: styles.testLabel,\n      children: \"Custom Character Requirements\"\n    }), _jsx(View, {\n      style: styles.testCase,\n      children: _jsx(PasswordStrengthMeter, {\n        requireUpperCase: false,\n        requireLowerCase: true,\n        requireNumbers: false,\n        requireSpecialChars: true\n      })\n    }), _jsx(Text, {\n      style: styles.testLabel,\n      children: \"Custom Strength Algorithm\"\n    }), _jsx(View, {\n      style: styles.testCase,\n      children: _jsx(PasswordStrengthMeter, {\n        customStrengthAlgorithm: customStrengthAlgorithm\n      })\n    }), _jsx(Text, {\n      style: styles.testLabel,\n      children: \"Custom Strength Bar Colors\"\n    }), _jsx(View, {\n      style: styles.testCase,\n      children: _jsx(PasswordStrengthMeter, {\n        strengthBarColors: {\n          weak: \"blue\",\n          fair: \"purple\",\n          good: \"pink\",\n          strong: \"orange\",\n          veryStrong: \"cyan\"\n        }\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  testCase: {\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 5\n  },\n  testLabel: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginTop: 10\n  }\n});\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","View","ScrollView","StyleSheet","Text","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","customStrengthAlgorithm","password","length","PasswordStrengthMeterTest","style","styles","container","children","testLabel","testCase","minLength","requireUpperCase","requireLowerCase","requireNumbers","requireSpecialChars","strengthBarColors","weak","fair","good","strong","veryStrong","create","flex","padding","marginBottom","borderWidth","borderColor","borderRadius","fontSize","fontWeight","marginTop"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React from \"react\";\nimport { View, ScrollView, StyleSheet, Text } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\n// Example custom strength algorithm\nconst customStrengthAlgorithm = (password) => {\n  // Example algorithm: Strength increases with password length\n  return password.length * 10;\n};\n\nconst PasswordStrengthMeterTest = () => {\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.testLabel}>Default Configuration</Text>\n      <View style={styles.testCase}>\n        <PasswordStrengthMeter />\n      </View>\n\n      <Text style={styles.testLabel}>Minimum Length 12</Text>\n      <View style={styles.testCase}>\n        <PasswordStrengthMeter minLength={12} />\n      </View>\n\n      <Text style={styles.testLabel}>Custom Character Requirements</Text>\n      <View style={styles.testCase}>\n        <PasswordStrengthMeter\n          requireUpperCase={false}\n          requireLowerCase={true}\n          requireNumbers={false}\n          requireSpecialChars={true}\n        />\n      </View>\n\n      <Text style={styles.testLabel}>Custom Strength Algorithm</Text>\n      <View style={styles.testCase}>\n        <PasswordStrengthMeter\n          customStrengthAlgorithm={customStrengthAlgorithm}\n        />\n      </View>\n\n      <Text style={styles.testLabel}>Custom Strength Bar Colors</Text>\n      <View style={styles.testCase}>\n        <PasswordStrengthMeter\n          strengthBarColors={{\n            weak: \"blue\",\n            fair: \"purple\",\n            good: \"pink\",\n            strong: \"orange\",\n            veryStrong: \"cyan\",\n          }}\n        />\n      </View>\n\n      {/* Add more test cases as needed */}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n  },\n  testCase: {\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 5,\n  },\n  testLabel: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginTop: 10,\n  },\n});\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}