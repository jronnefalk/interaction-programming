{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    score = _ref.score,\n    customStrengthLevels = _ref.customStrengthLevels,\n    style = _ref.style;\n  var defaultStrengthLevels = [{\n    label: \"Very Weak\",\n    threshold: 1,\n    color: \"red\"\n  }, {\n    label: \"Weak\",\n    threshold: 3,\n    color: \"orange\"\n  }, {\n    label: \"Average\",\n    threshold: 5,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 7,\n    color: \"lightgreen\"\n  }, {\n    label: \"Very Strong\",\n    threshold: 9,\n    color: \"green\"\n  }];\n  var levels = customStrengthLevels || defaultStrengthLevels;\n  var maxThreshold = levels[levels.length - 1].threshold;\n  var getLevelInfo = function getLevelInfo() {\n    for (var i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n  var _getLevelInfo = getLevelInfo(),\n    label = _getLevelInfo.label,\n    color = _getLevelInfo.color;\n  var barWidth = `${score / maxThreshold * 100}%`;\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(View, {\n      style: [styles.strengthBar, {\n        width: barWidth,\n        backgroundColor: color\n      }]\n    }), password && password.length > 0 && _jsx(Text, {\n      style: [styles.label, {\n        color: color\n      }],\n      children: label\n    })]\n  });\n};\nPasswordStrengthMeter.propTypes = {\n  password: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    threshold: PropTypes.number,\n    color: PropTypes.string\n  })),\n  style: PropTypes.object\n};\nPasswordStrengthMeter.defaultProps = {\n  style: {}\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginTop: 10\n  },\n  strengthBar: {\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\"\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    alignSelf: \"left\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","View","Text","StyleSheet","PropTypes","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","score","customStrengthLevels","style","defaultStrengthLevels","label","threshold","color","levels","maxThreshold","length","getLevelInfo","i","_getLevelInfo","barWidth","styles","container","children","strengthBar","width","backgroundColor","propTypes","string","isRequired","number","arrayOf","shape","object","defaultProps","create","marginTop","height","borderRadius","overflow","fontWeight","alignSelf"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  score,\n  customStrengthLevels,\n  style,\n}) => {\n  const defaultStrengthLevels = [\n    { label: \"Very Weak\", threshold: 1, color: \"red\" },\n    { label: \"Weak\", threshold: 3, color: \"orange\" },\n    { label: \"Average\", threshold: 5, color: \"yellow\" },\n    { label: \"Strong\", threshold: 7, color: \"lightgreen\" },\n    { label: \"Very Strong\", threshold: 9, color: \"green\" },\n  ];\n\n  const levels = customStrengthLevels || defaultStrengthLevels;\n  const maxThreshold = levels[levels.length - 1].threshold;\n\n  const getLevelInfo = () => {\n    for (let i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n\n  const { label, color } = getLevelInfo();\n  const barWidth = `${(score / maxThreshold) * 100}%`;\n\n  return (\n    <View style={[styles.container, style]}>\n      <View\n        style={[\n          styles.strengthBar,\n          { width: barWidth, backgroundColor: color },\n        ]}\n      />\n      {password && password.length > 0 && (\n        <Text style={[styles.label, { color: color }]}>{label}</Text>\n      )}\n    </View>\n  );\n};\n\nPasswordStrengthMeter.propTypes = {\n  password: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      threshold: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ),\n  style: PropTypes.object,\n};\n\nPasswordStrengthMeter.defaultProps = {\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginTop: 10,\n  },\n  strengthBar: {\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\",\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    alignSelf: \"left\", // Center align the label\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}