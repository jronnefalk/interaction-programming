{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PasswordCriteria = function PasswordCriteria(_ref) {\n  var isValid = _ref.isValid,\n    text = _ref.text;\n  return _jsxs(Text, {\n    style: [styles.criteria, isValid ? styles.valid : styles.invalid],\n    children: [isValid ? \"✓\" : \"✗\", \" \", text]\n  });\n};\nvar defaultStrengthAlgorithm = function defaultStrengthAlgorithm(criteria) {\n  var strength = 0;\n  Object.values(criteria).forEach(function (isValid) {\n    if (isValid) strength += 20;\n  });\n  return strength;\n};\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref2) {\n  var _ref2$minLength = _ref2.minLength,\n    minLength = _ref2$minLength === void 0 ? 8 : _ref2$minLength,\n    _ref2$maxLength = _ref2.maxLength,\n    maxLength = _ref2$maxLength === void 0 ? 50 : _ref2$maxLength,\n    _ref2$requireUpperCas = _ref2.requireUpperCase,\n    requireUpperCase = _ref2$requireUpperCas === void 0 ? true : _ref2$requireUpperCas,\n    _ref2$requireLowerCas = _ref2.requireLowerCase,\n    requireLowerCase = _ref2$requireLowerCas === void 0 ? true : _ref2$requireLowerCas,\n    _ref2$requireNumbers = _ref2.requireNumbers,\n    requireNumbers = _ref2$requireNumbers === void 0 ? true : _ref2$requireNumbers,\n    _ref2$requireSpecialC = _ref2.requireSpecialChars,\n    requireSpecialChars = _ref2$requireSpecialC === void 0 ? true : _ref2$requireSpecialC,\n    _ref2$allowedSpecialC = _ref2.allowedSpecialChars,\n    allowedSpecialChars = _ref2$allowedSpecialC === void 0 ? \"!@#$%^&*\" : _ref2$allowedSpecialC,\n    _ref2$customStrengthA = _ref2.customStrengthAlgorithm,\n    customStrengthAlgorithm = _ref2$customStrengthA === void 0 ? null : _ref2$customStrengthA,\n    _ref2$strengthBarColo = _ref2.strengthBarColors,\n    strengthBarColors = _ref2$strengthBarColo === void 0 ? {\n      weak: \"red\",\n      fair: \"orange\",\n      good: \"yellow\",\n      strong: \"lightgreen\",\n      veryStrong: \"green\"\n    } : _ref2$strengthBarColo;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isCriteriaVisible = _useState4[0],\n    setCriteriaVisible = _useState4[1];\n  var passwordCriteria = {\n    length: password.length >= minLength && password.length <= maxLength,\n    upper: requireUpperCase && /[A-Z]/.test(password),\n    lower: requireLowerCase && /[a-z]/.test(password),\n    number: requireNumbers && /\\d/.test(password),\n    special: requireSpecialChars && new RegExp(`[${allowedSpecialChars}]`).test(password)\n  };\n  var strength = customStrengthAlgorithm ? customStrengthAlgorithm(password, passwordCriteria) : defaultStrengthAlgorithm(password, passwordCriteria);\n  var getPasswordStrengthBarStyle = function getPasswordStrengthBarStyle() {\n    var barColor = strengthBarColors.weak;\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;else if (strength >= 60) barColor = strengthBarColors.strong;else if (strength >= 40) barColor = strengthBarColors.good;else if (strength >= 20) barColor = strengthBarColors.fair;\n    return {\n      width: `${strength}%`,\n      backgroundColor: barColor,\n      height: 10\n    };\n  };\n  var strengthLabel = function strengthLabel() {\n    if (strength >= 80) return \"Very Strong\";else if (strength >= 60) return \"Strong\";else if (strength >= 40) return \"Good\";else if (strength >= 20) return \"Fair\";else return \"Weak\";\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: !passwordVisible,\n      placeholder: \"Enter your password...\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.visibilityToggle,\n      onPress: function onPress() {\n        return setPasswordVisible(!passwordVisible);\n      },\n      children: _jsx(Text, {\n        children: passwordVisible ? \"Hide\" : \"Show\"\n      })\n    }), _jsx(Text, {\n      style: [styles.strengthLabel, {\n        color: getPasswordStrengthBarStyle().backgroundColor\n      }],\n      children: strengthLabel()\n    }), _jsx(View, {\n      style: styles.strengthBarContainer,\n      children: _jsx(View, {\n        style: getPasswordStrengthBarStyle()\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setCriteriaVisible(true);\n      },\n      style: styles.infoIcon,\n      children: _jsx(Text, {\n        style: styles.infoText,\n        children: \"i\"\n      })\n    }), _jsx(Modal, {\n      visible: isCriteriaVisible,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: function onRequestClose() {\n        return setCriteriaVisible(false);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: \"Password Criteria\"\n          }), _jsx(PasswordCriteria, {\n            isValid: passwordCriteria.length,\n            text: \"At least 8 characters\"\n          }), _jsx(PasswordCriteria, {\n            isValid: passwordCriteria.upper,\n            text: \"One uppercase letter\"\n          }), _jsx(PasswordCriteria, {\n            isValid: passwordCriteria.lower,\n            text: \"One lowercase letter\"\n          }), _jsx(PasswordCriteria, {\n            isValid: passwordCriteria.number,\n            text: \"One number\"\n          }), _jsx(PasswordCriteria, {\n            isValid: passwordCriteria.special,\n            text: `One special character (${allowedSpecialChars})`\n          }), _jsx(TouchableOpacity, {\n            style: styles.buttonClose,\n            onPress: function onPress() {\n              return setCriteriaVisible(!isCriteriaVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.textStyle,\n              children: \"Hide\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\"\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2\n  },\n  valid: {\n    color: \"green\"\n  },\n  invalid: {\n    color: \"red\"\n  },\n  criteriaList: {\n    marginBottom: 10\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Modal","StyleSheet","jsxs","_jsxs","jsx","_jsx","PasswordCriteria","_ref","isValid","text","style","styles","criteria","valid","invalid","children","defaultStrengthAlgorithm","strength","Object","values","forEach","PasswordStrengthMeter","_ref2","_ref2$minLength","minLength","_ref2$maxLength","maxLength","_ref2$requireUpperCas","requireUpperCase","_ref2$requireLowerCas","requireLowerCase","_ref2$requireNumbers","requireNumbers","_ref2$requireSpecialC","requireSpecialChars","_ref2$allowedSpecialC","allowedSpecialChars","_ref2$customStrengthA","customStrengthAlgorithm","_ref2$strengthBarColo","strengthBarColors","weak","fair","good","strong","veryStrong","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","isCriteriaVisible","setCriteriaVisible","passwordCriteria","length","upper","test","lower","number","special","RegExp","getPasswordStrengthBarStyle","barColor","width","backgroundColor","height","strengthLabel","container","title","input","onChangeText","value","secureTextEntry","passwordVisible","placeholder","visibilityToggle","onPress","setPasswordVisible","color","strengthBarContainer","infoIcon","infoText","visible","transparent","animationType","onRequestClose","centeredView","modalView","modalTitle","buttonClose","textStyle","create","padding","justifyContent","borderColor","borderWidth","marginBottom","flexDirection","alignItems","marginVertical","criteriaList","borderRadius"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Modal,\n  StyleSheet,\n} from \"react-native\";\n\n// Show whether a password criteria has been met\nconst PasswordCriteria = ({ isValid, text }) => (\n  <Text style={[styles.criteria, isValid ? styles.valid : styles.invalid]}>\n    {isValid ? \"✓\" : \"✗\"} {text}\n  </Text>\n);\n\n// Simple algorithm to calculate password strength\nconst defaultStrengthAlgorithm = (criteria) => {\n  // We start with zero strength and increase it by 20 for each criteria met\n  let strength = 0;\n  Object.values(criteria).forEach((isValid) => {\n    if (isValid) strength += 20;\n  });\n  return strength; // The strength is a score out of 100\n};\n\n// Main component for the password strength meter\nconst PasswordStrengthMeter = ({\n  // The default props for our component\n  minLength = 8,\n  maxLength = 50,\n  requireUpperCase = true,\n  requireLowerCase = true,\n  requireNumbers = true,\n  requireSpecialChars = true,\n  allowedSpecialChars = \"!@#$%^&*\",\n  customStrengthAlgorithm = null,\n  strengthBarColors = {\n    weak: \"red\",\n    fair: \"orange\",\n    good: \"yellow\",\n    strong: \"lightgreen\",\n    veryStrong: \"green\",\n  },\n}) => {\n  const [password, setPassword] = useState(\"\"); // This state holds the input from our text field\n  const [isCriteriaVisible, setCriteriaVisible] = useState(false);\n\n  // We check the password against our criteria every time it changes\n  const passwordCriteria = {\n    length: password.length >= minLength && password.length <= maxLength,\n    upper: requireUpperCase && /[A-Z]/.test(password),\n    lower: requireLowerCase && /[a-z]/.test(password),\n    number: requireNumbers && /\\d/.test(password),\n    special:\n      requireSpecialChars &&\n      new RegExp(`[${allowedSpecialChars}]`).test(password),\n  };\n\n  // We calculate the strength of the password using either the default algorithm or a custom one\n  const strength = customStrengthAlgorithm\n    ? customStrengthAlgorithm(password, passwordCriteria)\n    : defaultStrengthAlgorithm(password, passwordCriteria);\n\n  // This function determines the color of the strength bar based on the password strength\n  const getPasswordStrengthBarStyle = () => {\n    let barColor = strengthBarColors.weak; // Start with the weakest color\n\n    // Then adjust the color based on how strong the password is\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;\n    else if (strength >= 60) barColor = strengthBarColors.strong;\n    else if (strength >= 40) barColor = strengthBarColors.good;\n    else if (strength >= 20) barColor = strengthBarColors.fair;\n\n    // Return the style for the strength bar\n    return {\n      width: `${strength}%`, // The width of the bar represents the strength\n      backgroundColor: barColor, // The color represents the strength level\n      height: 10,\n    };\n  };\n\n  const strengthLabel = () => {\n    if (strength >= 80) return \"Very Strong\";\n    else if (strength >= 60) return \"Strong\";\n    else if (strength >= 40) return \"Good\";\n    else if (strength >= 20) return \"Fair\";\n    else return \"Weak\";\n  };\n\n  // The return function includes all the JSX elements for our component UI\n  return (\n    <View style={styles.container}>\n      {/* Title for the password input */}\n      <Text style={styles.title}>Password</Text>\n\n      {/* Input field for the password */}\n      <TextInput\n        style={styles.input}\n        onChangeText={setPassword}\n        value={password}\n        secureTextEntry={!passwordVisible}\n        placeholder=\"Enter your password...\"\n      />\n\n      {/* Icon to toggle password visibility */}\n      <TouchableOpacity\n        style={styles.visibilityToggle}\n        onPress={() => setPasswordVisible(!passwordVisible)}\n      >\n        <Text>{passwordVisible ? \"Hide\" : \"Show\"}</Text>\n      </TouchableOpacity>\n\n      {/* Textual feedback for password strength */}\n      <Text\n        style={[\n          styles.strengthLabel,\n          { color: getPasswordStrengthBarStyle().backgroundColor },\n        ]}\n      >\n        {strengthLabel()}\n      </Text>\n\n      {/* Visual representation of password strength */}\n      <View style={styles.strengthBarContainer}>\n        <View style={getPasswordStrengthBarStyle()} />\n      </View>\n\n      {/* 'i' icon to show criteria */}\n      <TouchableOpacity\n        onPress={() => setCriteriaVisible(true)}\n        style={styles.infoIcon}\n      >\n        <Text style={styles.infoText}>i</Text>\n      </TouchableOpacity>\n\n      {/* Modal for password criteria */}\n      <Modal\n        visible={isCriteriaVisible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setCriteriaVisible(false)}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalTitle}>Password Criteria</Text>\n            {/* List of all password criteria */}\n            <PasswordCriteria\n              isValid={passwordCriteria.length}\n              text=\"At least 8 characters\"\n            />\n            <PasswordCriteria\n              isValid={passwordCriteria.upper}\n              text=\"One uppercase letter\"\n            />\n            <PasswordCriteria\n              isValid={passwordCriteria.lower}\n              text=\"One lowercase letter\"\n            />\n            <PasswordCriteria\n              isValid={passwordCriteria.number}\n              text=\"One number\"\n            />\n            <PasswordCriteria\n              isValid={passwordCriteria.special}\n              text={`One special character (${allowedSpecialChars})`}\n            />\n            <TouchableOpacity\n              style={styles.buttonClose}\n              onPress={() => setCriteriaVisible(!isCriteriaVisible)}\n            >\n              <Text style={styles.textStyle}>Hide</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\n// Here we define the styles used in our component\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\",\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10,\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2,\n  },\n  valid: {\n    color: \"green\",\n  },\n  invalid: {\n    color: \"red\",\n  },\n  criteriaList: {\n    marginBottom: 10,\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10,\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}