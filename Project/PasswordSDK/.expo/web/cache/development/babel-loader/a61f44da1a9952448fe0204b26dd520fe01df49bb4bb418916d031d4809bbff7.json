{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var scoreAlgorithm = _ref.scoreAlgorithm,\n    customStrengthLevels = _ref.customStrengthLevels,\n    style = _ref.style;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    strength = _useState4[0],\n    setStrength = _useState4[1];\n  var _useState5 = useState(\"#333\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    color = _useState6[0],\n    setColor = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    progress = _useState8[0],\n    setProgress = _useState8[1];\n  useEffect(function () {\n    var score = scoreAlgorithm(password);\n    var level = getStrengthLevel(score, customStrengthLevels);\n    setStrength(level.label);\n    setColor(level.color);\n    setProgress(score / level.threshold * 100);\n  }, [password, scoreAlgorithm, customStrengthLevels]);\n  var getStrengthLevel = function getStrengthLevel(score, levels) {\n    var level = levels.find(function (l) {\n      return score <= l.threshold;\n    }) || levels[levels.length - 1];\n    return level;\n  };\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true,\n      onChangeText: setPassword\n    }), _jsx(Text, {\n      children: \"Password Strength: \"\n    }), _jsx(Text, {\n      style: [styles.strengthText, {\n        color: color\n      }],\n      children: strength\n    }), _jsx(View, {\n      style: styles.progressBarContainer,\n      children: _jsx(View, {\n        style: [styles.progressBar, {\n          backgroundColor: color,\n          width: `${progress}%`\n        }]\n      })\n    })]\n  });\n};\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    threshold: PropTypes.number,\n    color: PropTypes.string\n  })),\n  style: PropTypes.object\n};\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: [{\n    label: \"Very Weak\",\n    threshold: 10,\n    color: \"red\"\n  }, {\n    label: \"Weak\",\n    threshold: 30,\n    color: \"orange\"\n  }, {\n    label: \"Average\",\n    threshold: 50,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 70,\n    color: \"lightgreen\"\n  }, {\n    label: \"Very Strong\",\n    threshold: 100,\n    color: \"green\"\n  }],\n  style: {}\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 16,\n    borderRadius: 8,\n    width: 300\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8\n  },\n  strengthText: {\n    margin: 8\n  },\n  progressBarContainer: {\n    height: 10,\n    width: \"100%\",\n    borderRadius: 16,\n    overflow: \"hidden\",\n    marginTop: 8,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  progressBar: {\n    height: \"100%\",\n    borderRadius: 4\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Text","StyleSheet","PropTypes","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","scoreAlgorithm","customStrengthLevels","style","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","strength","setStrength","_useState5","_useState6","color","setColor","_useState7","_useState8","progress","setProgress","score","level","getStrengthLevel","label","threshold","levels","find","l","length","styles","container","children","input","placeholder","secureTextEntry","onChangeText","strengthText","progressBarContainer","progressBar","backgroundColor","width","propTypes","func","isRequired","arrayOf","shape","string","number","object","defaultProps","create","alignItems","padding","borderRadius","height","borderColor","borderWidth","paddingHorizontal","marginBottom","margin","overflow","marginTop"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst PasswordStrengthMeter = ({\n  scoreAlgorithm,\n  customStrengthLevels,\n  style,\n}) => {\n  const [password, setPassword] = useState(\"\");\n  const [strength, setStrength] = useState(\"\");\n  const [color, setColor] = useState(\"#333\"); // Default color\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const score = scoreAlgorithm(password);\n    const level = getStrengthLevel(score, customStrengthLevels);\n    setStrength(level.label);\n    setColor(level.color);\n    setProgress((score / level.threshold) * 100);\n  }, [password, scoreAlgorithm, customStrengthLevels]);\n\n  const getStrengthLevel = (score, levels) => {\n    let level =\n      levels.find((l) => score <= l.threshold) || levels[levels.length - 1];\n    return level;\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your password\"\n        secureTextEntry={true}\n        onChangeText={setPassword}\n      />\n      <Text>Password Strength: </Text>\n      <Text style={[styles.strengthText, { color: color }]}>{strength}</Text>\n      <View style={styles.progressBarContainer}>\n        <View\n          style={[\n            styles.progressBar,\n            { backgroundColor: color, width: `${progress}%` },\n          ]}\n        />\n      </View>\n    </View>\n  );\n};\n\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      threshold: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ),\n  style: PropTypes.object,\n};\n\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: [\n    { label: \"Very Weak\", threshold: 10, color: \"red\" },\n    { label: \"Weak\", threshold: 30, color: \"orange\" },\n    { label: \"Average\", threshold: 50, color: \"yellow\" },\n    { label: \"Strong\", threshold: 70, color: \"lightgreen\" },\n    { label: \"Very Strong\", threshold: 100, color: \"green\" },\n  ],\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 16,\n    borderRadius: 8,\n    width: 300,\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8,\n  },\n  strengthText: {\n    margin: 8,\n  },\n  progressBarContainer: {\n    height: 10,\n    width: \"100%\",\n    borderRadius: 16,\n    overflow: \"hidden\",\n    marginTop: 8,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: \"white\",\n  },\n  progressBar: {\n    height: \"100%\",\n    borderRadius: 4,\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}