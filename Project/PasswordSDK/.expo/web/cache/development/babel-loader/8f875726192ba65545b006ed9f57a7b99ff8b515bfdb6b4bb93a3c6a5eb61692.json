{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var customColors = [\"#FFC0CB\", \"#FFA07A\", \"#FFD700\", \"#32CD32\", \"#0000FF\", \"#800080\"];\n  var basicStrengthAlgorithm = function basicStrengthAlgorithm(password) {\n    return password.length;\n  };\n  var advancedStrengthAlgorithm = function advancedStrengthAlgorithm(password) {\n    var strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n  var versions = [{\n    title: \"Basic Strength Calculation\",\n    strengthWords: null,\n    calculateStrength: basicStrengthAlgorithm\n  }, {\n    title: \"Advanced Strength Calculation\",\n    strengthWords: [{\n      word: \"Weak\",\n      strength: 0\n    }, {\n      word: \"Better\",\n      strength: 2\n    }, {\n      word: \"Strong\",\n      strength: 4\n    }],\n    calculateStrength: advancedStrengthAlgorithm\n  }];\n  return _jsx(ScrollView, {\n    children: versions.map(function (version, index) {\n      return _jsxs(View, {\n        style: {\n          marginVertical: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: 18,\n            marginBottom: 10\n          },\n          children: version.title\n        }), _jsx(TextInput, {\n          onChangeText: setPassword,\n          value: password,\n          placeholder: \"Enter your password\",\n          secureTextEntry: true\n        }), _jsx(PasswordStrengthMeter, {\n          password: password,\n          calculateStrength: version.calculateStrength,\n          colorScheme: customColors,\n          userStrengthWords: version.strengthWords\n        })]\n      }, index);\n    })\n  });\n};\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","ScrollView","Text","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password","setPassword","customColors","basicStrengthAlgorithm","length","advancedStrengthAlgorithm","strength","test","versions","title","strengthWords","calculateStrength","word","children","map","version","index","style","marginVertical","fontWeight","fontSize","marginBottom","onChangeText","value","placeholder","secureTextEntry","colorScheme","userStrengthWords"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, ScrollView, Text } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password, setPassword] = useState(\"\");\n\n  const customColors = [\n    \"#FFC0CB\", // Soft Pink\n    \"#FFA07A\", // Light Orange\n    \"#FFD700\", // Vibrant Yellow\n    \"#32CD32\", // Fresh Green\n    \"#0000FF\", // Deep Blue\n    \"#800080\", // Rich Purple\n  ];\n\n  const basicStrengthAlgorithm = (password) => {\n    return password.length;\n  };\n\n  const advancedStrengthAlgorithm = (password) => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n\n  const versions = [\n    {\n      title: \"Basic Strength Calculation\",\n      strengthWords: null,\n      calculateStrength: basicStrengthAlgorithm,\n    },\n    {\n      title: \"Advanced Strength Calculation\",\n      strengthWords: [\n        { word: \"Weak\", strength: 0 },\n        { word: \"Better\", strength: 2 },\n        { word: \"Strong\", strength: 4 },\n      ],\n      calculateStrength: advancedStrengthAlgorithm,\n    },\n  ];\n\n  return (\n    <ScrollView>\n      {versions.map((version, index) => (\n        <View key={index} style={{ marginVertical: 20 }}>\n          <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}>\n            {version.title}\n          </Text>\n          <TextInput\n            onChangeText={setPassword}\n            value={password}\n            placeholder=\"Enter your password\"\n            secureTextEntry\n          />\n          <PasswordStrengthMeter\n            password={password}\n            calculateStrength={version.calculateStrength}\n            colorScheme={customColors}\n            userStrengthWords={version.strengthWords}\n          />\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAExC,OAAOC,qBAAqB;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;EACtC,IAAAC,SAAA,GAAgCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,YAAY,GAAG,CACnB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EAED,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIH,QAAQ,EAAK;IAC3C,OAAOA,QAAQ,CAACI,MAAM;EACxB,CAAC;EAED,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIL,QAAQ,EAAK;IAC9C,IAAIM,QAAQ,GAAG,CAAC;IAChB,IAAIN,QAAQ,CAACI,MAAM,IAAI,CAAC,EAAEE,QAAQ,IAAI,CAAC;IACvC,IAAI,OAAO,CAACC,IAAI,CAACP,QAAQ,CAAC,EAAEM,QAAQ,IAAI,CAAC;IACzC,IAAI,IAAI,CAACC,IAAI,CAACP,QAAQ,CAAC,EAAEM,QAAQ,IAAI,CAAC;IACtC,IAAI,cAAc,CAACC,IAAI,CAACP,QAAQ,CAAC,EAAEM,QAAQ,IAAI,CAAC;IAChD,OAAOA,QAAQ;EACjB,CAAC;EAED,IAAME,QAAQ,GAAG,CACf;IACEC,KAAK,EAAE,4BAA4B;IACnCC,aAAa,EAAE,IAAI;IACnBC,iBAAiB,EAAER;EACrB,CAAC,EACD;IACEM,KAAK,EAAE,+BAA+B;IACtCC,aAAa,EAAE,CACb;MAAEE,IAAI,EAAE,MAAM;MAAEN,QAAQ,EAAE;IAAE,CAAC,EAC7B;MAAEM,IAAI,EAAE,QAAQ;MAAEN,QAAQ,EAAE;IAAE,CAAC,EAC/B;MAAEM,IAAI,EAAE,QAAQ;MAAEN,QAAQ,EAAE;IAAE,CAAC,CAChC;IACDK,iBAAiB,EAAEN;EACrB,CAAC,CACF;EAED,OACEZ,IAAA,CAACJ,UAAU;IAAAwB,QAAA,EACRL,QAAQ,CAACM,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK;MAAA,OAC3BrB,KAAA,CAACR,IAAI;QAAa8B,KAAK,EAAE;UAAEC,cAAc,EAAE;QAAG,CAAE;QAAAL,QAAA,GAC9CpB,IAAA,CAACH,IAAI;UAAC2B,KAAK,EAAE;YAAEE,UAAU,EAAE,MAAM;YAAEC,QAAQ,EAAE,EAAE;YAAEC,YAAY,EAAE;UAAG,CAAE;UAAAR,QAAA,EACjEE,OAAO,CAACN;QAAK,CACV,CAAC,EACPhB,IAAA,CAACL,SAAS;UACRkC,YAAY,EAAErB,WAAY;UAC1BsB,KAAK,EAAEvB,QAAS;UAChBwB,WAAW,EAAC,qBAAqB;UACjCC,eAAe;QAAA,CAChB,CAAC,EACFhC,IAAA,CAACF,qBAAqB;UACpBS,QAAQ,EAAEA,QAAS;UACnBW,iBAAiB,EAAEI,OAAO,CAACJ,iBAAkB;UAC7Ce,WAAW,EAAExB,YAAa;UAC1ByB,iBAAiB,EAAEZ,OAAO,CAACL;QAAc,CAC1C,CAAC;MAAA,GAfOM,KAgBL,CAAC;IAAA,CACR;EAAC,CACQ,CAAC;AAEjB,CAAC;AAED,eAAepB,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}