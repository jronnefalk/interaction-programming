{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var calculateStrength = function calculateStrength(password) {\n    var strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n  var customColors = [\"#FFC0CB\", \"#FFA07A\", \"#FFD700\", \"#32CD32\", \"#0000FF\", \"#800080\"];\n  var customLabels = [\"Way too weak...\", \"Still weak!\", \"Now we're getting somewhere\", \"That's quite alright!\", \"That's a strong one!!\", \"WOW NICE!\"];\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      onChangeText: setPassword,\n      value: password,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true\n    }), _jsx(PasswordStrengthMeter, {\n      password: password,\n      algorithm: calculateStrength,\n      colorScheme: customColors,\n      labels: customLabels\n    })]\n  });\n};\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password","setPassword","calculateStrength","strength","length","test","customColors","customLabels","children","onChangeText","value","placeholder","secureTextEntry","algorithm","colorScheme","labels"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password, setPassword] = useState(\"\");\n\n  // Custom algorithm to calculate password strength\n  const calculateStrength = (password) => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n\n  // Custom color scheme and labels\n  const customColors = [\n    \"#FFC0CB\", // Soft Pink\n    \"#FFA07A\", // Light Orange\n    \"#FFD700\", // Vibrant Yellow\n    \"#32CD32\", // Fresh Green\n    \"#0000FF\", // Deep Blue\n    \"#800080\", // Rich Purple\n  ];\n  const customLabels = [\n    \"Way too weak...\",\n    \"Still weak!\",\n    \"Now we're getting somewhere\",\n    \"That's quite alright!\",\n    \"That's a strong one!!\",\n    \"WOW NICE!\",\n  ];\n\n  return (\n    <View>\n      <TextInput\n        onChangeText={setPassword}\n        value={password}\n        placeholder=\"Enter your password\"\n        secureTextEntry\n      />\n      <PasswordStrengthMeter\n        password={password}\n        algorithm={calculateStrength}\n        colorScheme={customColors}\n        labels={customLabels}\n      />\n    </View>\n  );\n};\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAExC,OAAOC,qBAAqB;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5D,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;EACtC,IAAAC,SAAA,GAAgCT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAG5B,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIF,QAAQ,EAAK;IACtC,IAAIG,QAAQ,GAAG,CAAC;IAChB,IAAIH,QAAQ,CAACI,MAAM,IAAI,CAAC,EAAED,QAAQ,IAAI,CAAC;IACvC,IAAI,OAAO,CAACE,IAAI,CAACL,QAAQ,CAAC,EAAEG,QAAQ,IAAI,CAAC;IACzC,IAAI,IAAI,CAACE,IAAI,CAACL,QAAQ,CAAC,EAAEG,QAAQ,IAAI,CAAC;IACtC,IAAI,cAAc,CAACE,IAAI,CAACL,QAAQ,CAAC,EAAEG,QAAQ,IAAI,CAAC;IAChD,OAAOA,QAAQ;EACjB,CAAC;EAGD,IAAMG,YAAY,GAAG,CACnB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;EACD,IAAMC,YAAY,GAAG,CACnB,iBAAiB,EACjB,aAAa,EACb,6BAA6B,EAC7B,uBAAuB,EACvB,uBAAuB,EACvB,WAAW,CACZ;EAED,OACEZ,KAAA,CAACN,IAAI;IAAAmB,QAAA,GACHf,IAAA,CAACH,SAAS;MACRmB,YAAY,EAAER,WAAY;MAC1BS,KAAK,EAAEV,QAAS;MAChBW,WAAW,EAAC,qBAAqB;MACjCC,eAAe;IAAA,CAChB,CAAC,EACFnB,IAAA,CAACF,qBAAqB;MACpBS,QAAQ,EAAEA,QAAS;MACnBa,SAAS,EAAEX,iBAAkB;MAC7BY,WAAW,EAAER,YAAa;MAC1BS,MAAM,EAAER;IAAa,CACtB,CAAC;EAAA,CACE,CAAC;AAEX,CAAC;AAED,eAAeX,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}