{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar PasswordCriteria = function PasswordCriteria(_ref) {\n  var isValid = _ref.isValid,\n    text = _ref.text;\n  return _jsxs(Text, {\n    style: [styles.criteria, isValid ? styles.valid : styles.invalid],\n    children: [isValid ? \"✓\" : \"✗\", \" \", text]\n  });\n};\nvar defaultStrengthAlgorithm = function defaultStrengthAlgorithm(password, criteria) {\n  var strength = 0;\n  Object.values(criteria).forEach(function (isValid) {\n    if (isValid) strength += 20;\n  });\n  return strength;\n};\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref2) {\n  var _ref2$minLength = _ref2.minLength,\n    minLength = _ref2$minLength === void 0 ? 8 : _ref2$minLength,\n    _ref2$maxLength = _ref2.maxLength,\n    maxLength = _ref2$maxLength === void 0 ? 50 : _ref2$maxLength,\n    _ref2$requireUpperCas = _ref2.requireUpperCase,\n    requireUpperCase = _ref2$requireUpperCas === void 0 ? true : _ref2$requireUpperCas,\n    _ref2$requireLowerCas = _ref2.requireLowerCase,\n    requireLowerCase = _ref2$requireLowerCas === void 0 ? true : _ref2$requireLowerCas,\n    _ref2$requireNumbers = _ref2.requireNumbers,\n    requireNumbers = _ref2$requireNumbers === void 0 ? true : _ref2$requireNumbers,\n    _ref2$requireSpecialC = _ref2.requireSpecialChars,\n    requireSpecialChars = _ref2$requireSpecialC === void 0 ? true : _ref2$requireSpecialC,\n    _ref2$allowedSpecialC = _ref2.allowedSpecialChars,\n    allowedSpecialChars = _ref2$allowedSpecialC === void 0 ? \"!@#$%^&*\" : _ref2$allowedSpecialC,\n    _ref2$customStrengthA = _ref2.customStrengthAlgorithm,\n    customStrengthAlgorithm = _ref2$customStrengthA === void 0 ? null : _ref2$customStrengthA,\n    _ref2$strengthBarColo = _ref2.strengthBarColors,\n    strengthBarColors = _ref2$strengthBarColo === void 0 ? {\n      weak: \"red\",\n      fair: \"orange\",\n      good: \"yellow\",\n      strong: \"lightgreen\",\n      veryStrong: \"green\"\n    } : _ref2$strengthBarColo;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var passwordCriteria = useMemo(function () {\n    return {\n      length: password.length >= minLength && password.length <= maxLength,\n      upper: requireUpperCase ? /[A-Z]/.test(password) : true,\n      lower: requireLowerCase ? /[a-z]/.test(password) : true,\n      number: requireNumbers ? /\\d/.test(password) : true,\n      special: requireSpecialChars ? new RegExp(\"[\" + allowedSpecialChars + \"]\").test(password) : true\n    };\n  }, [password, minLength, maxLength, requireUpperCase, requireLowerCase, requireNumbers, requireSpecialChars, allowedSpecialChars]);\n  var calculateStrength = useMemo(function () {\n    var algorithm = customStrengthAlgorithm || defaultStrengthAlgorithm;\n    return algorithm(password, passwordCriteria);\n  }, [password, passwordCriteria, customStrengthAlgorithm]);\n  var getPasswordStrengthBarStyle = function getPasswordStrengthBarStyle() {\n    var strength = calculateStrength;\n    var barColor;\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;else if (strength >= 60) barColor = strengthBarColors.strong;else if (strength >= 40) barColor = strengthBarColors.good;else if (strength >= 20) barColor = strengthBarColors.fair;else barColor = strengthBarColors.weak;\n    return {\n      width: `${strength}%`,\n      backgroundColor: barColor,\n      height: 10\n    };\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setPassword,\n      value: password,\n      secureTextEntry: true,\n      placeholder: \"Enter your password\"\n    }), _jsx(View, {\n      style: styles.strengthBarContainer,\n      children: _jsx(View, {\n        style: getPasswordStrengthBarStyle()\n      })\n    }), _jsxs(View, {\n      style: styles.criteriaList,\n      children: [requireUpperCase && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.upper,\n        text: \"One uppercase letter\"\n      }), requireLowerCase && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.lower,\n        text: \"One lowercase letter\"\n      }), requireNumbers && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.number,\n        text: \"One number\"\n      }), requireSpecialChars && _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.special,\n        text: \"One special character (!,@,#,$,%)\"\n      }), _jsx(PasswordCriteria, {\n        isValid: passwordCriteria.length,\n        text: `At least ${minLength} characters`\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\"\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2\n  },\n  valid: {\n    color: \"green\"\n  },\n  invalid: {\n    color: \"red\"\n  },\n  criteriaList: {\n    marginBottom: 10\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useMemo","View","Text","TextInput","StyleSheet","jsxs","_jsxs","jsx","_jsx","PasswordCriteria","_ref","isValid","text","style","styles","criteria","valid","invalid","children","defaultStrengthAlgorithm","password","strength","Object","values","forEach","PasswordStrengthMeter","_ref2","_ref2$minLength","minLength","_ref2$maxLength","maxLength","_ref2$requireUpperCas","requireUpperCase","_ref2$requireLowerCas","requireLowerCase","_ref2$requireNumbers","requireNumbers","_ref2$requireSpecialC","requireSpecialChars","_ref2$allowedSpecialC","allowedSpecialChars","_ref2$customStrengthA","customStrengthAlgorithm","_ref2$strengthBarColo","strengthBarColors","weak","fair","good","strong","veryStrong","_useState","_useState2","_slicedToArray","setPassword","passwordCriteria","length","upper","test","lower","number","special","RegExp","calculateStrength","algorithm","getPasswordStrengthBarStyle","barColor","width","backgroundColor","height","container","input","onChangeText","value","secureTextEntry","placeholder","strengthBarContainer","criteriaList","create","padding","justifyContent","borderColor","borderWidth","marginBottom","flexDirection","alignItems","marginVertical","color","borderRadius"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { View, Text, TextInput, StyleSheet } from \"react-native\";\n\nconst PasswordCriteria = ({ isValid, text }) => (\n  <Text style={[styles.criteria, isValid ? styles.valid : styles.invalid]}>\n    {isValid ? \"✓\" : \"✗\"} {text}\n  </Text>\n);\n\nconst defaultStrengthAlgorithm = (password, criteria) => {\n  let strength = 0;\n  Object.values(criteria).forEach((isValid) => {\n    if (isValid) strength += 20;\n  });\n  return strength; // Returns a strength score between 0 and 100\n};\n\nconst PasswordStrengthMeter = ({\n  minLength = 8,\n  maxLength = 50,\n  requireUpperCase = true,\n  requireLowerCase = true,\n  requireNumbers = true,\n  requireSpecialChars = true,\n  allowedSpecialChars = \"!@#$%^&*\",\n  customStrengthAlgorithm = null,\n  strengthBarColors = {\n    weak: \"red\",\n    fair: \"orange\",\n    good: \"yellow\",\n    strong: \"lightgreen\",\n    veryStrong: \"green\",\n  },\n}) => {\n  const [password, setPassword] = useState(\"\");\n\n  const passwordCriteria = useMemo(\n    () => ({\n      length: password.length >= minLength && password.length <= maxLength,\n      upper: requireUpperCase ? /[A-Z]/.test(password) : true,\n      lower: requireLowerCase ? /[a-z]/.test(password) : true,\n      number: requireNumbers ? /\\d/.test(password) : true,\n      special: requireSpecialChars\n        ? new RegExp(\"[\" + allowedSpecialChars + \"]\").test(password)\n        : true,\n    }),\n    [\n      password,\n      minLength,\n      maxLength,\n      requireUpperCase,\n      requireLowerCase,\n      requireNumbers,\n      requireSpecialChars,\n      allowedSpecialChars,\n    ]\n  );\n\n  const calculateStrength = useMemo(() => {\n    const algorithm = customStrengthAlgorithm || defaultStrengthAlgorithm;\n    return algorithm(password, passwordCriteria);\n  }, [password, passwordCriteria, customStrengthAlgorithm]);\n\n  const getPasswordStrengthBarStyle = () => {\n    const strength = calculateStrength;\n    let barColor;\n    if (strength >= 80) barColor = strengthBarColors.veryStrong;\n    else if (strength >= 60) barColor = strengthBarColors.strong;\n    else if (strength >= 40) barColor = strengthBarColors.good;\n    else if (strength >= 20) barColor = strengthBarColors.fair;\n    else barColor = strengthBarColors.weak;\n\n    return {\n      width: `${strength}%`,\n      backgroundColor: barColor,\n      height: 10,\n    };\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        onChangeText={setPassword}\n        value={password}\n        secureTextEntry\n        placeholder=\"Enter your password\"\n      />\n      <View style={styles.strengthBarContainer}>\n        <View style={getPasswordStrengthBarStyle()} />\n      </View>\n      <View style={styles.criteriaList}>\n        {requireUpperCase && (\n          <PasswordCriteria\n            isValid={passwordCriteria.upper}\n            text=\"One uppercase letter\"\n          />\n        )}\n        {requireLowerCase && (\n          <PasswordCriteria\n            isValid={passwordCriteria.lower}\n            text=\"One lowercase letter\"\n          />\n        )}\n        {requireNumbers && (\n          <PasswordCriteria\n            isValid={passwordCriteria.number}\n            text=\"One number\"\n          />\n        )}\n        {requireSpecialChars && (\n          <PasswordCriteria\n            isValid={passwordCriteria.special}\n            text=\"One special character (!,@,#,$,%)\"\n          />\n        )}\n        <PasswordCriteria\n          isValid={passwordCriteria.length}\n          text={`At least ${minLength} characters`}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    justifyContent: \"center\",\n  },\n  input: {\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    padding: 10,\n    marginBottom: 10,\n  },\n  criteria: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginVertical: 2,\n  },\n  valid: {\n    color: \"green\",\n  },\n  invalid: {\n    color: \"red\",\n  },\n  criteriaList: {\n    marginBottom: 10,\n  },\n  strengthBarContainer: {\n    width: \"100%\",\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n    marginVertical: 10,\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}