{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeterTest = function PasswordStrengthMeterTest() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password1 = _useState2[0],\n    setPassword1 = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password2 = _useState4[0],\n    setPassword2 = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password3 = _useState6[0],\n    setPassword3 = _useState6[1];\n  var customColors = [\"#FFC0CB\", \"#FFA07A\", \"#FFD700\", \"#32CD32\", \"#0000FF\", \"#800080\"];\n  var basicStrengthAlgorithm = function basicStrengthAlgorithm(password) {\n    return password.length;\n  };\n  var advancedStrengthAlgorithm = function advancedStrengthAlgorithm(password) {\n    var strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n  var customStrengthWords = [{\n    word: \"Too Simple\",\n    strength: 0\n  }, {\n    word: \"Better\",\n    strength: 3\n  }, {\n    word: \"Good\",\n    strength: 5\n  }, {\n    word: \"Strong\",\n    strength: 7\n  }, {\n    word: \"Very Strong\",\n    strength: 9\n  }, {\n    word: \"Extremely Strong\",\n    strength: 10\n  }];\n  var versions = [{\n    title: \"Basic Strength Calculation\",\n    password: password1,\n    setPassword: setPassword1,\n    calculateStrength: basicStrengthAlgorithm\n  }, {\n    title: \"Advanced Strength Calculation\",\n    password: password2,\n    setPassword: setPassword2,\n    calculateStrength: advancedStrengthAlgorithm\n  }, {\n    title: \"Custom Words and Colors Strength Calculation\",\n    password: password3,\n    setPassword: setPassword3,\n    calculateStrength: advancedStrengthAlgorithm,\n    strengthWords: customStrengthWords,\n    colorScheme: customColorScheme\n  }];\n  return _jsx(ScrollView, {\n    children: versions.map(function (version, index) {\n      return _jsxs(View, {\n        style: {\n          marginVertical: 20\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: \"bold\",\n            fontSize: 18,\n            marginBottom: 10\n          },\n          children: version.title\n        }), _jsx(TextInput, {\n          onChangeText: function onChangeText(text) {\n            return version.setPassword(text);\n          },\n          value: version.password,\n          placeholder: \"Enter your password\",\n          secureTextEntry: true,\n          style: {\n            marginBottom: 10\n          }\n        }), _jsx(PasswordStrengthMeter, {\n          password: version.password,\n          calculateStrength: version.calculateStrength,\n          colorScheme: index === 2 ? customColors : undefined,\n          strengthWords: version.strengthWords,\n          showFeedbackText: true\n        })]\n      }, index);\n    })\n  });\n};\nexport default PasswordStrengthMeterTest;","map":{"version":3,"names":["React","useState","View","TextInput","ScrollView","Text","PasswordStrengthMeter","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeterTest","_useState","_useState2","_slicedToArray","password1","setPassword1","_useState3","_useState4","password2","setPassword2","_useState5","_useState6","password3","setPassword3","customColors","basicStrengthAlgorithm","password","length","advancedStrengthAlgorithm","strength","test","customStrengthWords","word","versions","title","setPassword","calculateStrength","strengthWords","colorScheme","customColorScheme","children","map","version","index","style","marginVertical","fontWeight","fontSize","marginBottom","onChangeText","text","value","placeholder","secureTextEntry","undefined","showFeedbackText"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeterTest.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, ScrollView, Text } from \"react-native\";\nimport PasswordStrengthMeter from \"./PasswordStrengthMeter\";\n\nconst PasswordStrengthMeterTest = () => {\n  const [password1, setPassword1] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [password3, setPassword3] = useState(\"\");\n\n  const customColors = [\n    \"#FFC0CB\", // Soft Pink\n    \"#FFA07A\", // Light Orange\n    \"#FFD700\", // Vibrant Yellow\n    \"#32CD32\", // Fresh Green\n    \"#0000FF\", // Deep Blue\n    \"#800080\", // Rich Purple\n  ];\n\n  const basicStrengthAlgorithm = (password) => {\n    return password.length; // Basic example: Length-based strength calculation\n  };\n\n  const advancedStrengthAlgorithm = (password) => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/\\d/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  };\n\n  const customStrengthWords = [\n    { word: \"Too Simple\", strength: 0 },\n    { word: \"Better\", strength: 3 },\n    { word: \"Good\", strength: 5 },\n    { word: \"Strong\", strength: 7 },\n    { word: \"Very Strong\", strength: 9 },\n    { word: \"Extremely Strong\", strength: 10 },\n  ];\n\n  const versions = [\n    {\n      title: \"Basic Strength Calculation\",\n      password: password1,\n      setPassword: setPassword1,\n      calculateStrength: basicStrengthAlgorithm,\n    },\n    {\n      title: \"Advanced Strength Calculation\",\n      password: password2,\n      setPassword: setPassword2,\n      calculateStrength: advancedStrengthAlgorithm,\n    },\n    {\n      title: \"Custom Words and Colors Strength Calculation\",\n      password: password3,\n      setPassword: setPassword3,\n      calculateStrength: advancedStrengthAlgorithm,\n      strengthWords: customStrengthWords, // User-provided custom strength words\n      colorScheme: customColorScheme, // Custom color scheme for this version\n    },\n  ];\n\n  return (\n    <ScrollView>\n      {versions.map((version, index) => (\n        <View key={index} style={{ marginVertical: 20 }}>\n          <Text style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}>\n            {version.title}\n          </Text>\n          <TextInput\n            onChangeText={(text) => version.setPassword(text)}\n            value={version.password}\n            placeholder=\"Enter your password\"\n            secureTextEntry\n            style={{ marginBottom: 10 }}\n          />\n          <PasswordStrengthMeter\n            password={version.password}\n            calculateStrength={version.calculateStrength}\n            colorScheme={index === 2 ? customColors : undefined} // Apply custom colors only for the third version\n            strengthWords={version.strengthWords}\n            showFeedbackText={true}\n          />\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n\nexport default PasswordStrengthMeterTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}