{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    customCriteria = _ref.customCriteria,\n    _ref$customColors = _ref.customColors,\n    customColors = _ref$customColors === void 0 ? [\"red\", \"yellow\", \"green\"] : _ref$customColors,\n    customStrengthWords = _ref.customStrengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? false : _ref$showFeedbackText;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    strengthScore = _useState2[0],\n    setStrengthScore = _useState2[1];\n  useEffect(function () {\n    if (customCriteria) {\n      var strengthPoints = customCriteria(password);\n      console.log(\"Strength Points:\", strengthPoints);\n      var normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n      console.log(\"Normalized Strength:\", normalizedStrength);\n      setStrengthScore(normalizedStrength);\n    }\n  }, [password, customCriteria]);\n  var getStrengthLabel = function getStrengthLabel() {\n    if (customStrengthWords) {\n      var wordObj = customStrengthWords.find(function (wordObj) {\n        return strengthScore >= wordObj.strength;\n      });\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      var labels = [\"Weak\", \"Better\", \"Strong\"];\n      return labels[strengthScore];\n    }\n  };\n  var barColor = customColors ? customColors[strengthScore] || customColors[0] : customColors[0];\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${strengthScore / 5 * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", getStrengthLabel()]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","customCriteria","_ref$customColors","customColors","customStrengthWords","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","_useState","_useState2","_slicedToArray","strengthScore","setStrengthScore","strengthPoints","console","log","normalizedStrength","Math","min","max","getStrengthLabel","wordObj","find","strength","word","labels","barColor","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","label","fontWeight","feedbackText","color","children","style"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  customCriteria, // Custom algorithm function provided by the user\n  customColors = [\"red\", \"yellow\", \"green\"], // Default customColors array\n  customStrengthWords, // Custom strength words provided by the user\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = false,\n}) => {\n  const [strengthScore, setStrengthScore] = useState(0);\n\n  useEffect(() => {\n    if (customCriteria) {\n      // Use the custom algorithm function provided by the user\n      const strengthPoints = customCriteria(password);\n      console.log(\"Strength Points:\", strengthPoints);\n\n      // Normalize to a scale of 0 to 5\n      const normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n      console.log(\"Normalized Strength:\", normalizedStrength);\n\n      setStrengthScore(normalizedStrength);\n    }\n  }, [password, customCriteria]);\n\n  // Function to get the appropriate label or word based on strength\n  const getStrengthLabel = () => {\n    if (customStrengthWords) {\n      // Use the custom strengthWords if provided\n      const wordObj = customStrengthWords.find(\n        (wordObj) => strengthScore >= wordObj.strength\n      );\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      // Use default labels if strengthWords are not provided\n      const labels = [\"Weak\", \"Better\", \"Strong\"];\n      return labels[strengthScore];\n    }\n  };\n\n  const barColor = customColors\n    ? customColors[strengthScore] || customColors[0]\n    : customColors[0]; // Default to the first color\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${(strengthScore / 5) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>Strength: {getStrengthLabel()}</Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}