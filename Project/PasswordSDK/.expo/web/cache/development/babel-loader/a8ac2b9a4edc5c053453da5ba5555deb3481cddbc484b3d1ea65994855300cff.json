{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var score = _ref.score,\n    strengthLevels = _ref.strengthLevels;\n  var defaultLevels = [{\n    label: \"Too Short\",\n    threshold: 1,\n    color: \"gray\"\n  }, {\n    label: \"Weak\",\n    threshold: 3,\n    color: \"red\"\n  }, {\n    label: \"Fair\",\n    threshold: 5,\n    color: \"orange\"\n  }, {\n    label: \"Good\",\n    threshold: 7,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 9,\n    color: \"green\"\n  }];\n  var levels = strengthLevels || defaultLevels;\n  var findLevel = function findLevel(score, levels) {\n    return levels.find(function (level) {\n      return score <= level.threshold;\n    }) || levels[levels.length - 1];\n  };\n  var level = findLevel(score, levels);\n  var barWidth = `${score / level.threshold * 100}%`;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.strengthBar, {\n        width: barWidth,\n        backgroundColor: level.color\n      }]\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", level.label]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\",\n    marginTop: 10\n  },\n  strengthBar: {\n    height: \"100%\"\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","score","strengthLevels","defaultLevels","label","threshold","color","levels","findLevel","find","level","length","barWidth","style","styles","container","children","strengthBar","width","backgroundColor","create","height","borderRadius","overflow","marginTop","fontWeight"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({ score, strengthLevels }) => {\n  // Default strength levels and colors\n  const defaultLevels = [\n    { label: \"Too Short\", threshold: 1, color: \"gray\" },\n    { label: \"Weak\", threshold: 3, color: \"red\" },\n    { label: \"Fair\", threshold: 5, color: \"orange\" },\n    { label: \"Good\", threshold: 7, color: \"yellow\" },\n    { label: \"Strong\", threshold: 9, color: \"green\" },\n  ];\n\n  const levels = strengthLevels || defaultLevels;\n\n  const findLevel = (score, levels) => {\n    return (\n      levels.find((level) => score <= level.threshold) ||\n      levels[levels.length - 1]\n    );\n  };\n\n  const level = findLevel(score, levels);\n  const barWidth = `${(score / level.threshold) * 100}%`;\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={[\n          styles.strengthBar,\n          { width: barWidth, backgroundColor: level.color },\n        ]}\n      />\n      <Text style={styles.label}>Strength: {level.label}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\",\n    marginTop: 10,\n  },\n  strengthBar: {\n    height: \"100%\",\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAkC;EAAA,IAA5BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,cAAc,GAAAF,IAAA,CAAdE,cAAc;EAEpD,IAAMC,aAAa,GAAG,CACpB;IAAEC,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAO,CAAC,EACnD;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC7C;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAS,CAAC,EAChD;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAS,CAAC,EAChD;IAAEF,KAAK,EAAE,QAAQ;IAAEC,SAAS,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAClD;EAED,IAAMC,MAAM,GAAGL,cAAc,IAAIC,aAAa;EAE9C,IAAMK,SAAS,GAAG,SAAZA,SAASA,CAAIP,KAAK,EAAEM,MAAM,EAAK;IACnC,OACEA,MAAM,CAACE,IAAI,CAAC,UAACC,KAAK;MAAA,OAAKT,KAAK,IAAIS,KAAK,CAACL,SAAS;IAAA,EAAC,IAChDE,MAAM,CAACA,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;EAE7B,CAAC;EAED,IAAMD,KAAK,GAAGF,SAAS,CAACP,KAAK,EAAEM,MAAM,CAAC;EACtC,IAAMK,QAAQ,GAAI,GAAGX,KAAK,GAAGS,KAAK,CAACL,SAAS,GAAI,GAAI,GAAE;EAEtD,OACEP,KAAA,CAACN,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,IAAA,CAACJ,IAAI;MACHqB,KAAK,EAAE,CACLC,MAAM,CAACG,WAAW,EAClB;QAAEC,KAAK,EAAEN,QAAQ;QAAEO,eAAe,EAAET,KAAK,CAACJ;MAAM,CAAC;IACjD,CACH,CAAC,EACFR,KAAA,CAACL,IAAI;MAACoB,KAAK,EAAEC,MAAM,CAACV,KAAM;MAAAY,QAAA,GAAC,YAAU,EAACN,KAAK,CAACN,KAAK;IAAA,CAAO,CAAC;EAAA,CACrD,CAAC;AAEX,CAAC;AAED,IAAMU,MAAM,GAAGpB,UAAU,CAAC0B,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTG,KAAK,EAAE,MAAM;IACbG,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE;EACb,CAAC;EACDP,WAAW,EAAE;IACXI,MAAM,EAAE;EACV,CAAC;EACDjB,KAAK,EAAE;IACLoB,SAAS,EAAE,CAAC;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe1B,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}