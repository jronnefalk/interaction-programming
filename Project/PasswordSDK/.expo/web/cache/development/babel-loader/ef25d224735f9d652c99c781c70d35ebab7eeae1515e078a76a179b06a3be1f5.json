{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var scoreAlgorithm = _ref.scoreAlgorithm,\n    customStrengthLevels = _ref.customStrengthLevels,\n    style = _ref.style,\n    onPasswordChange = _ref.onPasswordChange;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    score = _useState4[0],\n    setScore = _useState4[1];\n  useEffect(function () {\n    setScore(scoreAlgorithm(password));\n  }, [password, scoreAlgorithm]);\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    onPasswordChange && onPasswordChange(text);\n  };\n  var getLevelInfo = function getLevelInfo() {\n    for (var i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n  var levels = customStrengthLevels || defaultStrengthLevels;\n  var _getLevelInfo = getLevelInfo(),\n    label = _getLevelInfo.label,\n    color = _getLevelInfo.color;\n  var barWidth = `${score / levels[levels.length - 1].threshold * 100}%`;\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true,\n      onChangeText: handlePasswordChange,\n      value: password\n    }), password.length > 0 && _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: [styles.progressBar, {\n          backgroundColor: color,\n          width: barWidth\n        }]\n      }), _jsx(Text, {\n        style: [styles.label, {\n          textAlign: \"left\",\n          marginLeft: 8\n        }],\n        children: label\n      })]\n    })]\n  });\n};\nvar defaultStrengthLevels = [{\n  label: \"Very Weak\",\n  threshold: 10,\n  color: \"red\"\n}, {\n  label: \"Weak\",\n  threshold: 30,\n  color: \"orange\"\n}, {\n  label: \"Average\",\n  threshold: 50,\n  color: \"yellow\"\n}, {\n  label: \"Strong\",\n  threshold: 70,\n  color: \"lightgreen\"\n}, {\n  label: \"Very Strong\",\n  threshold: 100,\n  color: \"green\"\n}];\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    threshold: PropTypes.number,\n    color: PropTypes.string\n  })),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired\n};\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {}\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 6,\n    borderRadius: 8,\n    width: \"100%\",\n    marginBottom: 30\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    color: \"#000\"\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","TextInput","Text","StyleSheet","PropTypes","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PasswordStrengthMeter","_ref","scoreAlgorithm","customStrengthLevels","style","onPasswordChange","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","score","setScore","handlePasswordChange","text","getLevelInfo","i","levels","length","threshold","defaultStrengthLevels","_getLevelInfo","label","color","barWidth","styles","container","children","input","placeholder","secureTextEntry","onChangeText","value","progressBar","backgroundColor","width","textAlign","marginLeft","propTypes","func","isRequired","arrayOf","shape","string","number","object","defaultProps","create","alignItems","padding","borderRadius","marginBottom","height","borderColor","borderWidth","paddingHorizontal","marginTop","fontWeight","alignSelf"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst PasswordStrengthMeter = ({\n  scoreAlgorithm,\n  customStrengthLevels,\n  style,\n  onPasswordChange,\n}) => {\n  const [password, setPassword] = useState(\"\");\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    setScore(scoreAlgorithm(password));\n  }, [password, scoreAlgorithm]);\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n    onPasswordChange && onPasswordChange(text); // Call the onPasswordChange prop\n  };\n\n  const getLevelInfo = () => {\n    for (let i = 0; i < levels.length; i++) {\n      if (score <= levels[i].threshold) {\n        return levels[i];\n      }\n    }\n    return levels[levels.length - 1];\n  };\n\n  const levels = customStrengthLevels || defaultStrengthLevels;\n  const { label, color } = getLevelInfo();\n  const barWidth = `${(score / levels[levels.length - 1].threshold) * 100}%`;\n  return (\n    <View style={[styles.container, style]}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your password\"\n        secureTextEntry={true}\n        onChangeText={handlePasswordChange}\n        value={password}\n      />\n      {password.length > 0 && (\n        <>\n          <View\n            style={[\n              styles.progressBar,\n              { backgroundColor: color, width: barWidth },\n            ]}\n          />\n          <Text style={[styles.label, { textAlign: \"left\", marginLeft: 8 }]}>\n            {label}\n          </Text>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst defaultStrengthLevels = [\n  { label: \"Very Weak\", threshold: 10, color: \"red\" },\n  { label: \"Weak\", threshold: 30, color: \"orange\" },\n  { label: \"Average\", threshold: 50, color: \"yellow\" },\n  { label: \"Strong\", threshold: 70, color: \"lightgreen\" },\n  { label: \"Very Strong\", threshold: 100, color: \"green\" },\n];\n\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      threshold: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired,\n};\n\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 6,\n    borderRadius: 8,\n    width: \"100%\",\n    marginBottom: 30,\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8,\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\",\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}