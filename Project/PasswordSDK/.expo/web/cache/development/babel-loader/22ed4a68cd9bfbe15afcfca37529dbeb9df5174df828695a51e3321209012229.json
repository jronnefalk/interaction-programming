{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    calculateStrength = _ref.calculateStrength,\n    _ref$colorScheme = _ref.colorScheme,\n    colorScheme = _ref$colorScheme === void 0 ? [\"#FFC0CB\", \"#FFA07A\", \"#FFD700\", \"#32CD32\", \"#0000FF\", \"#800080\"] : _ref$colorScheme,\n    _ref$strengthWords = _ref.strengthWords,\n    strengthWords = _ref$strengthWords === void 0 ? [{\n      word: \"Weak\",\n      strength: 0\n    }, {\n      word: \"Better\",\n      strength: 4\n    }, {\n      word: \"Strong\",\n      strength: 8\n    }] : _ref$strengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? true : _ref$showFeedbackText;\n  var strengthScore = calculateStrength ? calculateStrength(password) : defaultStrengthCalculation(password);\n  var normalizedStrength = Math.min(Math.max(strengthScore, 0), strengthWords.length - 1);\n  var barColor = colorScheme[normalizedStrength];\n  var getStrengthLabel = function getStrengthLabel() {\n    var wordObj = strengthWords.find(function (wordObj) {\n      return strengthScore >= wordObj.strength;\n    });\n    return wordObj ? wordObj.word : \"Weak\";\n  };\n  var strengthLabel = getStrengthLabel();\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${normalizedStrength / (strengthWords.length - 1) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", strengthLabel]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nvar defaultStrengthCalculation = function defaultStrengthCalculation(password) {\n  var strengthPoints = 0;\n  if (!password) {\n    return strengthPoints;\n  }\n  if (password.length >= 8) strengthPoints += 2;\n  if (password.length >= 12) strengthPoints += 2;\n  if (/[a-z]/.test(password)) strengthPoints += 1;\n  if (/[A-Z]/.test(password)) strengthPoints += 1;\n  if (/\\d/.test(password)) strengthPoints += 1;\n  if (/[^A-Za-z0-9]/.test(password)) strengthPoints += 2;\n  return Math.min(strengthPoints, strengthWords.length - 1);\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","calculateStrength","_ref$colorScheme","colorScheme","_ref$strengthWords","strengthWords","word","strength","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","strengthScore","defaultStrengthCalculation","normalizedStrength","Math","min","max","length","barColor","getStrengthLabel","wordObj","find","strengthLabel","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","label","fontWeight","feedbackText","color","children","style","strengthPoints","test"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["// Ensure to import React if you're not using React 17+ that supports the new JSX Transform\nimport React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  calculateStrength,\n  colorScheme = [\n    \"#FFC0CB\",\n    \"#FFA07A\",\n    \"#FFD700\",\n    \"#32CD32\",\n    \"#0000FF\",\n    \"#800080\",\n  ], // Default colors\n  strengthWords = [\n    // Default strength words\n    { word: \"Weak\", strength: 0 },\n    { word: \"Better\", strength: 4 },\n    { word: \"Strong\", strength: 8 },\n  ],\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = true, // Show feedback text by default\n}) => {\n  const strengthScore = calculateStrength\n    ? calculateStrength(password)\n    : defaultStrengthCalculation(password);\n\n  const normalizedStrength = Math.min(\n    Math.max(strengthScore, 0),\n    strengthWords.length - 1\n  );\n  const barColor = colorScheme[normalizedStrength];\n\n  const getStrengthLabel = () => {\n    const wordObj = strengthWords.find(\n      (wordObj) => strengthScore >= wordObj.strength\n    );\n    return wordObj ? wordObj.word : \"Weak\"; // Default to \"Weak\" if no match is found\n  };\n\n  const strengthLabel = getStrengthLabel();\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${(normalizedStrength / (strengthWords.length - 1)) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>Strength: {strengthLabel}</Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst defaultStrengthCalculation = (password) => {\n  let strengthPoints = 0;\n\n  if (!password) {\n    return strengthPoints;\n  }\n\n  // Strength calculation logic\n  if (password.length >= 8) strengthPoints += 2;\n  if (password.length >= 12) strengthPoints += 2;\n  if (/[a-z]/.test(password)) strengthPoints += 1;\n  if (/[A-Z]/.test(password)) strengthPoints += 1;\n  if (/\\d/.test(password)) strengthPoints += 1;\n  if (/[^A-Za-z0-9]/.test(password)) strengthPoints += 2;\n\n  return Math.min(strengthPoints, strengthWords.length - 1); // Match with the number of strengthWords\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}