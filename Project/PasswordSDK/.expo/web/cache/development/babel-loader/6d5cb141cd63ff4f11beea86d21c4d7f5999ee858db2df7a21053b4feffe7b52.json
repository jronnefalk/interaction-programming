{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var score = _ref.score,\n    strengthLevels = _ref.strengthLevels;\n  var defaultLevels = [{\n    label: \"Too Short\",\n    threshold: 1,\n    color: \"gray\"\n  }, {\n    label: \"Weak\",\n    threshold: 3,\n    color: \"red\"\n  }, {\n    label: \"Fair\",\n    threshold: 5,\n    color: \"orange\"\n  }, {\n    label: \"Good\",\n    threshold: 7,\n    color: \"yellow\"\n  }, {\n    label: \"Strong\",\n    threshold: 9,\n    color: \"green\"\n  }];\n  var levels = strengthLevels || defaultLevels;\n  var findLevel = function findLevel() {\n    var currentLevel = levels[0];\n    for (var i = 0; i < levels.length; i++) {\n      if (score >= levels[i].threshold) {\n        currentLevel = levels[i];\n      } else {\n        break;\n      }\n    }\n    return currentLevel;\n  };\n  var calculateBarWidth = function calculateBarWidth() {\n    var level = findLevel();\n    var levelIndex = levels.indexOf(level);\n    var lowerThreshold = levelIndex === 0 ? 0 : levels[levelIndex - 1].threshold;\n    var range = level.threshold - lowerThreshold;\n    var relativeScore = score - lowerThreshold;\n    console.log(`Score: ${score}, Level: ${level.label}, Threshold Range: ${range}, Relative Score: ${relativeScore}`);\n    return `${relativeScore / range * 100}%`;\n  };\n  var barWidth = calculateBarWidth();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.strengthBar, {\n        width: barWidth,\n        backgroundColor: findLevel().color\n      }]\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", findLevel().label]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\",\n    marginTop: 10\n  },\n  strengthBar: {\n    height: \"100%\"\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","score","strengthLevels","defaultLevels","label","threshold","color","levels","findLevel","currentLevel","i","length","calculateBarWidth","level","levelIndex","indexOf","lowerThreshold","range","relativeScore","console","log","barWidth","style","styles","container","children","strengthBar","width","backgroundColor","create","height","borderRadius","overflow","marginTop","fontWeight"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({ score, strengthLevels }) => {\n  const defaultLevels = [\n    { label: \"Too Short\", threshold: 1, color: \"gray\" },\n    { label: \"Weak\", threshold: 3, color: \"red\" },\n    { label: \"Fair\", threshold: 5, color: \"orange\" },\n    { label: \"Good\", threshold: 7, color: \"yellow\" },\n    { label: \"Strong\", threshold: 9, color: \"green\" },\n  ];\n\n  const levels = strengthLevels || defaultLevels;\n\n  const findLevel = () => {\n    let currentLevel = levels[0];\n    for (let i = 0; i < levels.length; i++) {\n      if (score >= levels[i].threshold) {\n        currentLevel = levels[i];\n      } else {\n        break;\n      }\n    }\n    return currentLevel;\n  };\n\n  const calculateBarWidth = () => {\n    const level = findLevel();\n    const levelIndex = levels.indexOf(level);\n    const lowerThreshold =\n      levelIndex === 0 ? 0 : levels[levelIndex - 1].threshold;\n    const range = level.threshold - lowerThreshold;\n    const relativeScore = score - lowerThreshold;\n\n    console.log(\n      `Score: ${score}, Level: ${level.label}, Threshold Range: ${range}, Relative Score: ${relativeScore}`\n    );\n\n    return `${(relativeScore / range) * 100}%`;\n  };\n\n  const barWidth = calculateBarWidth();\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={[\n          styles.strengthBar,\n          { width: barWidth, backgroundColor: findLevel().color },\n        ]}\n      />\n      <Text style={styles.label}>Strength: {findLevel().label}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: 10,\n    borderRadius: 5,\n    overflow: \"hidden\",\n    marginTop: 10,\n  },\n  strengthBar: {\n    height: \"100%\",\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}