{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    customCriteria = _ref.customCriteria,\n    customColors = _ref.customColors,\n    customStrengthWords = _ref.customStrengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? false : _ref$showFeedbackText;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    strengthScore = _useState2[0],\n    setStrengthScore = _useState2[1];\n  var _useState3 = useState(\"Weak\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    strengthLabel = _useState4[0],\n    setStrengthLabel = _useState4[1];\n  var _useState5 = useState(customColors ? customColors.weak : \"red\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    barColor = _useState6[0],\n    setBarColor = _useState6[1];\n  useEffect(function () {\n    if (customCriteria) {\n      var _customCriteria = customCriteria(password),\n        score = _customCriteria.score,\n        label = _customCriteria.label,\n        color = _customCriteria.color;\n      setStrengthScore(score);\n      setStrengthLabel(label);\n      setBarColor(color);\n    } else {\n      var normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n      setStrengthScore(normalizedStrength);\n      console.log(\"Strength Points:\", normalizedStrength);\n      if (customStrengthWords) {\n        var wordObj = customStrengthWords.find(function (wordObj) {\n          return normalizedStrength >= wordObj.strength;\n        });\n        if (wordObj) {\n          setStrengthLabel(wordObj.word);\n          setBarColor(customColors ? customColors[wordObj.word] : \"red\");\n        }\n      } else {\n        var labels = [\"Weak\", \"Better\", \"Strong\"];\n        setStrengthLabel(labels[normalizedStrength]);\n        setBarColor(customColors ? customColors[labels[normalizedStrength]] : [\"red\", \"yellow\", \"green\"][normalizedStrength]);\n      }\n    }\n  }, [password]);\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${strengthScore / 5 * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", strengthLabel]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","customCriteria","customColors","customStrengthWords","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","_useState","_useState2","_slicedToArray","strengthScore","setStrengthScore","_useState3","_useState4","strengthLabel","setStrengthLabel","_useState5","weak","_useState6","barColor","setBarColor","_customCriteria","score","label","color","normalizedStrength","Math","min","max","strengthPoints","console","log","wordObj","find","strength","word","labels","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","fontWeight","feedbackText","children","style"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["// PasswordStrengthMeter.js\nimport React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  customCriteria,\n  customColors,\n  customStrengthWords,\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = false,\n}) => {\n  const [strengthScore, setStrengthScore] = useState(0);\n  const [strengthLabel, setStrengthLabel] = useState(\"Weak\");\n  const [barColor, setBarColor] = useState(\n    customColors ? customColors.weak : \"red\"\n  );\n\n  useEffect(() => {\n    // Custom criteria function provided by the user\n    if (customCriteria) {\n      const { score, label, color } = customCriteria(password);\n      setStrengthScore(score);\n      setStrengthLabel(label);\n      setBarColor(color);\n    } else {\n      // Default criteria (similar to provided code)\n\n      const normalizedStrength = Math.min(Math.max(strengthPoints, 0), 5);\n      setStrengthScore(normalizedStrength);\n\n      // Log the strength points to the console\n      console.log(\"Strength Points:\", normalizedStrength);\n\n      // Set strength label and bar color based on the score\n      if (customStrengthWords) {\n        const wordObj = customStrengthWords.find(\n          (wordObj) => normalizedStrength >= wordObj.strength\n        );\n        if (wordObj) {\n          setStrengthLabel(wordObj.word);\n          setBarColor(customColors ? customColors[wordObj.word] : \"red\");\n        }\n      } else {\n        const labels = [\"Weak\", \"Better\", \"Strong\"];\n        setStrengthLabel(labels[normalizedStrength]);\n        setBarColor(\n          customColors\n            ? customColors[labels[normalizedStrength]]\n            : [\"red\", \"yellow\", \"green\"][normalizedStrength]\n        );\n      }\n    }\n  }, [password]);\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${(strengthScore / 5) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>Strength: {strengthLabel}</Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}