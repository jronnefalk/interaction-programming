{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var scoreAlgorithm = _ref.scoreAlgorithm,\n    customStrengthLevels = _ref.customStrengthLevels,\n    style = _ref.style,\n    onPasswordChange = _ref.onPasswordChange;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    onPasswordChange(text);\n  };\n  var score = scoreAlgorithm(password);\n  var _getLevelInfo = getLevelInfo(score, customStrengthLevels),\n    label = _getLevelInfo.label,\n    color = _getLevelInfo.color,\n    threshold = _getLevelInfo.threshold;\n  var barWidth = `${score / threshold * 100}%`;\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your password\",\n      secureTextEntry: true,\n      onChangeText: handlePasswordChange,\n      value: password\n    }), _jsx(View, {\n      style: [styles.progressBar, {\n        backgroundColor: color,\n        width: barWidth\n      }]\n    }), _jsx(Text, {\n      style: [styles.label, {\n        color: color\n      }],\n      children: label\n    })]\n  });\n};\nvar defaultStrengthLevels = [{\n  label: \"Very Weak\",\n  threshold: 10,\n  color: \"red\"\n}, {\n  label: \"Weak\",\n  threshold: 30,\n  color: \"orange\"\n}, {\n  label: \"Average\",\n  threshold: 50,\n  color: \"yellow\"\n}, {\n  label: \"Strong\",\n  threshold: 70,\n  color: \"lightgreen\"\n}, {\n  label: \"Very Strong\",\n  threshold: 100,\n  color: \"green\"\n}];\nvar getLevelInfo = function getLevelInfo(score, levels) {\n  for (var i = 0; i < levels.length; i++) {\n    if (score <= levels[i].threshold || i === levels.length - 1) {\n      var lowerThreshold = i === 0 ? 0 : levels[i - 1].threshold;\n      var range = levels[i].threshold - lowerThreshold;\n      var scoreInCurrentRange = score - lowerThreshold;\n      var percentageThroughRange = range === 0 ? 100 : scoreInCurrentRange / range * 100;\n      return {\n        label: levels[i].label,\n        color: levels[i].color,\n        barWidth: percentageThroughRange\n      };\n    }\n  }\n};\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    threshold: PropTypes.number,\n    color: PropTypes.string\n  })),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired\n};\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {}\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 16,\n    borderRadius: 8,\n    width: \"100%\"\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\"\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\"\n  }\n});\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","View","TextInput","Text","StyleSheet","PropTypes","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","scoreAlgorithm","customStrengthLevels","style","onPasswordChange","_useState","_useState2","_slicedToArray","password","setPassword","handlePasswordChange","text","score","_getLevelInfo","getLevelInfo","label","color","threshold","barWidth","styles","container","children","input","placeholder","secureTextEntry","onChangeText","value","progressBar","backgroundColor","width","defaultStrengthLevels","levels","i","length","lowerThreshold","range","scoreInCurrentRange","percentageThroughRange","propTypes","func","isRequired","arrayOf","shape","string","number","object","defaultProps","create","alignItems","padding","borderRadius","height","borderColor","borderWidth","paddingHorizontal","marginBottom","marginTop","fontWeight","alignSelf"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, Text, StyleSheet } from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nconst PasswordStrengthMeter = ({\n  scoreAlgorithm,\n  customStrengthLevels,\n  style,\n  onPasswordChange,\n}) => {\n  const [password, setPassword] = useState(\"\");\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n    onPasswordChange(text);\n  };\n\n  const score = scoreAlgorithm(password);\n  const { label, color, threshold } = getLevelInfo(score, customStrengthLevels);\n  const barWidth = `${(score / threshold) * 100}%`;\n\n  return (\n    <View style={[styles.container, style]}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your password\"\n        secureTextEntry={true}\n        onChangeText={handlePasswordChange}\n        value={password}\n      />\n      <View\n        style={[\n          styles.progressBar,\n          { backgroundColor: color, width: barWidth },\n        ]}\n      />\n      <Text style={[styles.label, { color: color }]}>{label}</Text>\n    </View>\n  );\n};\n\nconst defaultStrengthLevels = [\n  { label: \"Very Weak\", threshold: 10, color: \"red\" },\n  { label: \"Weak\", threshold: 30, color: \"orange\" },\n  { label: \"Average\", threshold: 50, color: \"yellow\" },\n  { label: \"Strong\", threshold: 70, color: \"lightgreen\" },\n  { label: \"Very Strong\", threshold: 100, color: \"green\" },\n];\n\nconst getLevelInfo = (score, levels) => {\n  for (let i = 0; i < levels.length; i++) {\n    if (score <= levels[i].threshold || i === levels.length - 1) {\n      const lowerThreshold = i === 0 ? 0 : levels[i - 1].threshold;\n      const range = levels[i].threshold - lowerThreshold;\n      const scoreInCurrentRange = score - lowerThreshold;\n      const percentageThroughRange =\n        range === 0 ? 100 : (scoreInCurrentRange / range) * 100;\n\n      return {\n        label: levels[i].label,\n        color: levels[i].color,\n        barWidth: percentageThroughRange,\n      };\n    }\n  }\n};\n\nPasswordStrengthMeter.propTypes = {\n  scoreAlgorithm: PropTypes.func.isRequired,\n  customStrengthLevels: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string,\n      threshold: PropTypes.number,\n      color: PropTypes.string,\n    })\n  ),\n  style: PropTypes.object,\n  onPasswordChange: PropTypes.func.isRequired,\n};\n\nPasswordStrengthMeter.defaultProps = {\n  customStrengthLevels: defaultStrengthLevels,\n  style: {},\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    padding: 16,\n    borderRadius: 8,\n    width: \"100%\",\n  },\n  input: {\n    height: 30,\n    width: \"100%\",\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginBottom: 8,\n  },\n  label: {\n    marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  progressBar: {\n    height: 10,\n    borderRadius: 5,\n    marginTop: 8,\n    marginBottom: 8,\n    backgroundColor: \"lightgrey\",\n    alignSelf: \"stretch\",\n  },\n});\n\nexport default PasswordStrengthMeter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}