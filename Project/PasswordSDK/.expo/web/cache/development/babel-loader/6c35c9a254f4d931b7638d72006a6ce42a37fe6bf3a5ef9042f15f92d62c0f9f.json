{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordStrengthMeter = function PasswordStrengthMeter(_ref) {\n  var password = _ref.password,\n    _ref$strengthRules = _ref.strengthRules,\n    strengthRules = _ref$strengthRules === void 0 ? [] : _ref$strengthRules,\n    _ref$strengthThreshol = _ref.strengthThresholds,\n    strengthThresholds = _ref$strengthThreshol === void 0 ? {} : _ref$strengthThreshol,\n    _ref$strengthWords = _ref.strengthWords,\n    strengthWords = _ref$strengthWords === void 0 ? [] : _ref$strengthWords,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? \"100%\" : _ref$barWidth,\n    _ref$showStrengthBar = _ref.showStrengthBar,\n    showStrengthBar = _ref$showStrengthBar === void 0 ? true : _ref$showStrengthBar,\n    _ref$showFeedbackText = _ref.showFeedbackText,\n    showFeedbackText = _ref$showFeedbackText === void 0 ? false : _ref$showFeedbackText,\n    _ref$minLength = _ref.minLength,\n    minLength = _ref$minLength === void 0 ? 8 : _ref$minLength;\n  var defaultColors = [\"red\", \"yellow\", \"green\"];\n  var defaultStrengthCalculation = function defaultStrengthCalculation(password) {\n    if (!password) return 0;\n    var strengthPoints = 0;\n    if (password.length >= minLength) strengthPoints++;\n    strengthRules.forEach(function (rule) {\n      if (rule.test(password)) {\n        strengthPoints++;\n      }\n    });\n    return Math.min(strengthPoints, 5);\n  };\n  var _useState = useState(defaultStrengthCalculation(password)),\n    _useState2 = _slicedToArray(_useState, 2),\n    strengthScore = _useState2[0],\n    setStrengthScore = _useState2[1];\n  var getStrengthLabel = function getStrengthLabel(score) {\n    if (strengthWords.length > 0) {\n      var wordObj = strengthWords.find(function (wordObj) {\n        return score >= wordObj.strength;\n      });\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      var labels = [\"Weak\", \"Better\", \"Strong\"];\n      var normalizedStrength = Math.min(Math.max(score, 0), labels.length - 1);\n      return labels[normalizedStrength];\n    }\n  };\n  useEffect(function () {\n    var newStrengthScore = defaultStrengthCalculation(password);\n    setStrengthScore(newStrengthScore);\n  }, [password, strengthRules, minLength]);\n  var barColor = strengthThresholds[strengthScore] || defaultColors[strengthScore];\n  var styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10\n    },\n    strengthBar: {\n      width: `${strengthScore / (Object.keys(strengthThresholds).length - 1) * 100}%`,\n      height: \"100%\",\n      backgroundColor: barColor\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\"\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\"\n    }\n  });\n  return _jsxs(View, {\n    children: [showStrengthBar && _jsx(View, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.strengthBar\n      })\n    }), _jsxs(Text, {\n      style: styles.label,\n      children: [\"Strength: \", getStrengthLabel(strengthScore)]\n    }), showFeedbackText && _jsx(Text, {\n      style: styles.feedbackText,\n      children: \"Tips to improve your password strength.\"\n    })]\n  });\n};\nexport default PasswordStrengthMeter;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","PasswordStrengthMeter","_ref","password","_ref$strengthRules","strengthRules","_ref$strengthThreshol","strengthThresholds","_ref$strengthWords","strengthWords","_ref$barWidth","barWidth","_ref$showStrengthBar","showStrengthBar","_ref$showFeedbackText","showFeedbackText","_ref$minLength","minLength","defaultColors","defaultStrengthCalculation","strengthPoints","length","forEach","rule","test","Math","min","_useState","_useState2","_slicedToArray","strengthScore","setStrengthScore","getStrengthLabel","score","wordObj","find","strength","word","labels","normalizedStrength","max","newStrengthScore","barColor","styles","create","container","width","height","backgroundColor","borderRadius","overflow","marginTop","strengthBar","Object","keys","label","fontWeight","feedbackText","color","children","style"],"sources":["/Users/juliaronnefalk/Desktop/TDDC73_vt/GitHub/Untitled/Project/PasswordSDK/PasswordStrengthMeter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\n\nconst PasswordStrengthMeter = ({\n  password,\n  strengthRules = [], // Custom strength rules\n  strengthThresholds = {}, // Custom strength thresholds\n  strengthWords = [], // Custom strength words\n  barWidth = \"100%\",\n  showStrengthBar = true,\n  showFeedbackText = false,\n  minLength = 8, // Custom minimum password length\n}) => {\n  // Default colors\n  const defaultColors = [\"red\", \"yellow\", \"green\"];\n\n  // Default strength calculation function\n  const defaultStrengthCalculation = (password) => {\n    if (!password) return 0;\n    let strengthPoints = 0;\n\n    if (password.length >= minLength) strengthPoints++;\n\n    // Apply custom strength rules\n    strengthRules.forEach((rule) => {\n      if (rule.test(password)) {\n        strengthPoints++;\n      }\n    });\n\n    // Normalize to a scale of 0 to 5\n    return Math.min(strengthPoints, 5);\n  };\n\n  const [strengthScore, setStrengthScore] = useState(\n    defaultStrengthCalculation(password)\n  );\n\n  // Function to get the appropriate label or word based on strength\n  const getStrengthLabel = (score) => {\n    if (strengthWords.length > 0) {\n      // Use the custom strengthWords if provided\n      const wordObj = strengthWords.find(\n        (wordObj) => score >= wordObj.strength\n      );\n      return wordObj ? wordObj.word : \"\";\n    } else {\n      // Use default labels if strengthWords are not provided\n      const labels = [\"Weak\", \"Better\", \"Strong\"]; // Default labels if no strengthWords provided\n      const normalizedStrength = Math.min(\n        Math.max(score, 0),\n        labels.length - 1\n      );\n      return labels[normalizedStrength];\n    }\n  };\n\n  useEffect(() => {\n    // Default strength calculation function\n    const newStrengthScore = defaultStrengthCalculation(password);\n    setStrengthScore(newStrengthScore);\n  }, [password, strengthRules, minLength]);\n\n  // Get bar color based on strength\n  const barColor =\n    strengthThresholds[strengthScore] || defaultColors[strengthScore];\n\n  const styles = StyleSheet.create({\n    container: {\n      width: barWidth,\n      height: 10,\n      backgroundColor: \"#eee\",\n      borderRadius: 5,\n      overflow: \"hidden\",\n      marginTop: 10,\n    },\n    strengthBar: {\n      width: `${\n        (strengthScore / (Object.keys(strengthThresholds).length - 1)) * 100\n      }%`,\n      height: \"100%\",\n      backgroundColor: barColor,\n    },\n    label: {\n      marginTop: 5,\n      fontWeight: \"bold\",\n    },\n    feedbackText: {\n      marginTop: 5,\n      color: \"gray\",\n    },\n  });\n\n  return (\n    <View>\n      {showStrengthBar && (\n        <View style={styles.container}>\n          <View style={styles.strengthBar} />\n        </View>\n      )}\n      <Text style={styles.label}>\n        Strength: {getStrengthLabel(strengthScore)}\n      </Text>\n      {showFeedbackText && (\n        <Text style={styles.feedbackText}>\n          Tips to improve your password strength.\n        </Text>\n      )}\n    </View>\n  );\n};\n\nexport default PasswordStrengthMeter;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EASrB;EAAA,IARJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,kBAAA,GAAAF,IAAA,CACRG,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,EAAE,GAAAA,kBAAA;IAAAE,qBAAA,GAAAJ,IAAA,CAClBK,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;IAAAE,kBAAA,GAAAN,IAAA,CACvBO,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,EAAE,GAAAA,kBAAA;IAAAE,aAAA,GAAAR,IAAA,CAClBS,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,MAAM,GAAAA,aAAA;IAAAE,oBAAA,GAAAV,IAAA,CACjBW,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,IAAI,GAAAA,oBAAA;IAAAE,qBAAA,GAAAZ,IAAA,CACtBa,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,cAAA,GAAAd,IAAA,CACxBe,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,CAAC,GAAAA,cAAA;EAGb,IAAME,aAAa,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;EAGhD,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIhB,QAAQ,EAAK;IAC/C,IAAI,CAACA,QAAQ,EAAE,OAAO,CAAC;IACvB,IAAIiB,cAAc,GAAG,CAAC;IAEtB,IAAIjB,QAAQ,CAACkB,MAAM,IAAIJ,SAAS,EAAEG,cAAc,EAAE;IAGlDf,aAAa,CAACiB,OAAO,CAAC,UAACC,IAAI,EAAK;MAC9B,IAAIA,IAAI,CAACC,IAAI,CAACrB,QAAQ,CAAC,EAAE;QACvBiB,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAGF,OAAOK,IAAI,CAACC,GAAG,CAACN,cAAc,EAAE,CAAC,CAAC;EACpC,CAAC;EAED,IAAAO,SAAA,GAA0CnC,QAAQ,CAChD2B,0BAA0B,CAAChB,QAAQ,CACrC,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFMG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAKtC,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAK;IAClC,IAAIxB,aAAa,CAACY,MAAM,GAAG,CAAC,EAAE;MAE5B,IAAMa,OAAO,GAAGzB,aAAa,CAAC0B,IAAI,CAChC,UAACD,OAAO;QAAA,OAAKD,KAAK,IAAIC,OAAO,CAACE,QAAQ;MAAA,CACxC,CAAC;MACD,OAAOF,OAAO,GAAGA,OAAO,CAACG,IAAI,GAAG,EAAE;IACpC,CAAC,MAAM;MAEL,IAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;MAC3C,IAAMC,kBAAkB,GAAGd,IAAI,CAACC,GAAG,CACjCD,IAAI,CAACe,GAAG,CAACP,KAAK,EAAE,CAAC,CAAC,EAClBK,MAAM,CAACjB,MAAM,GAAG,CAClB,CAAC;MACD,OAAOiB,MAAM,CAACC,kBAAkB,CAAC;IACnC;EACF,CAAC;EAED9C,SAAS,CAAC,YAAM;IAEd,IAAMgD,gBAAgB,GAAGtB,0BAA0B,CAAChB,QAAQ,CAAC;IAC7D4B,gBAAgB,CAACU,gBAAgB,CAAC;EACpC,CAAC,EAAE,CAACtC,QAAQ,EAAEE,aAAa,EAAEY,SAAS,CAAC,CAAC;EAGxC,IAAMyB,QAAQ,GACZnC,kBAAkB,CAACuB,aAAa,CAAC,IAAIZ,aAAa,CAACY,aAAa,CAAC;EAEnE,IAAMa,MAAM,GAAG/C,UAAU,CAACgD,MAAM,CAAC;IAC/BC,SAAS,EAAE;MACTC,KAAK,EAAEnC,QAAQ;MACfoC,MAAM,EAAE,EAAE;MACVC,eAAe,EAAE,MAAM;MACvBC,YAAY,EAAE,CAAC;MACfC,QAAQ,EAAE,QAAQ;MAClBC,SAAS,EAAE;IACb,CAAC;IACDC,WAAW,EAAE;MACXN,KAAK,EAAG,GACLhB,aAAa,IAAIuB,MAAM,CAACC,IAAI,CAAC/C,kBAAkB,CAAC,CAACc,MAAM,GAAG,CAAC,CAAC,GAAI,GAClE,GAAE;MACH0B,MAAM,EAAE,MAAM;MACdC,eAAe,EAAEN;IACnB,CAAC;IACDa,KAAK,EAAE;MACLJ,SAAS,EAAE,CAAC;MACZK,UAAU,EAAE;IACd,CAAC;IACDC,YAAY,EAAE;MACZN,SAAS,EAAE,CAAC;MACZO,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EAEF,OACE1D,KAAA,CAACN,IAAI;IAAAiE,QAAA,GACF9C,eAAe,IACdf,IAAA,CAACJ,IAAI;MAACkE,KAAK,EAAEjB,MAAM,CAACE,SAAU;MAAAc,QAAA,EAC5B7D,IAAA,CAACJ,IAAI;QAACkE,KAAK,EAAEjB,MAAM,CAACS;MAAY,CAAE;IAAC,CAC/B,CACP,EACDpD,KAAA,CAACL,IAAI;MAACiE,KAAK,EAAEjB,MAAM,CAACY,KAAM;MAAAI,QAAA,GAAC,YACf,EAAC3B,gBAAgB,CAACF,aAAa,CAAC;IAAA,CACtC,CAAC,EACNf,gBAAgB,IACfjB,IAAA,CAACH,IAAI;MAACiE,KAAK,EAAEjB,MAAM,CAACc,YAAa;MAAAE,QAAA,EAAC;IAElC,CAAM,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,eAAe1D,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}